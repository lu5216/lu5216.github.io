<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>网吧</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-04-07T02:27:53.824Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>醉影独成空</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>redis基础-02</title>
    <link href="http://example.com/2024/04/07/redis%E5%9F%BA%E7%A1%80-02/"/>
    <id>http://example.com/2024/04/07/redis%E5%9F%BA%E7%A1%80-02/</id>
    <published>2024-04-07T02:12:30.889Z</published>
    <updated>2024-04-07T02:27:53.824Z</updated>
    
    <content type="html"><![CDATA[<h1 id="redis基础-02"><a href="#redis基础-02" class="headerlink" title="redis基础-02"></a>redis基础-02</h1><h3 id="1、免费Redis图形化界面"><a href="#1、免费Redis图形化界面" class="headerlink" title="1、免费Redis图形化界面"></a>1、免费Redis图形化界面</h3><h5 id="1-1-下载"><a href="#1-1-下载" class="headerlink" title="1.1 下载"></a>1.1 下载</h5><p><a href="https://github.com/lework/RedisDesktopManager-Windows/releases">RESP</a></p><p>![image](“&#x2F;images&#x2F;%24%7Bimg%7D&#x2F;屏幕截图 2024-04-07 092320.png” alt&#x3D;”image” &#x2F;)</p><span id="more"></span><h5 id="1-2-连接"><a href="#1-2-连接" class="headerlink" title="1.2 连接"></a>1.2 连接</h5><p>1、打开CentOS, 运行.&#x2F;redis-server</p><p>2、关闭CentOS防火墙</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld  // 查看防火墙</span><br><span class="line"></span><br><span class="line">systemctl stop firewalld    // 关闭防火墙（暂时关闭，下次开启CentOS需要再次关闭）</span><br></pre></td></tr></table></figure><p>3、连接</p><p>![image](“&#x2F;images&#x2F;%24%7Bimg%7D&#x2F;屏幕截图 2024-04-07 094134.png” alt&#x3D;”image” &#x2F;)</p><p>查看CentOS 地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr</span><br></pre></td></tr></table></figure><p>提示：测试连接一般秒连，转圈则说明连接失败，查看一下防火墙是否关闭。</p><h3 id="2、代码测试"><a href="#2、代码测试" class="headerlink" title="2、代码测试"></a>2、代码测试</h3><h5 id="1、下载jedis的jar包"><a href="#1、下载jedis的jar包" class="headerlink" title="1、下载jedis的jar包"></a>1、下载jedis的jar包</h5><p>项目目录如下：</p><p>![image](“&#x2F;images&#x2F;%24%7Bimg%7D&#x2F;屏幕截图 2024-04-07 095535.png” alt&#x3D;”image” &#x2F;)</p><p>新建lib文件夹，加入图中两个文件，右键添加为库</p><p><a href="https://github.com/lu5216/lu5216.github.io/tree/main/file">下载地址</a></p><h5 id="2、get、set方法"><a href="#2、get、set方法" class="headerlink" title="2、get、set方法"></a>2、get、set方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.gec.demoTest1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ZuiYing~</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@title</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DemoTest1</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fun1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Jedis</span>(<span class="string">&quot;192.168.93.129&quot;</span>, <span class="number">6379</span>);</span><br><span class="line">        jedis.set(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;jack&quot;</span>);</span><br><span class="line">        jedis.set(<span class="string">&quot;age&quot;</span>,<span class="string">&quot;13&quot;</span>);</span><br><span class="line">        jedis.set(<span class="string">&quot;address&quot;</span>,<span class="string">&quot;广州&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fun2</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Jedis</span>(<span class="string">&quot;192.168.93.129&quot;</span>, <span class="number">6379</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> jedis.get(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">age</span> <span class="operator">=</span> jedis.get(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">address</span> <span class="operator">=</span> jedis.get(<span class="string">&quot;address&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;name = &quot;</span> + name + <span class="string">&quot;, age = &quot;</span> + age + <span class="string">&quot;, address = &quot;</span> + address);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>fun1()运行，RESP刷新，db0成功添加数据</p><p>![image](“&#x2F;images&#x2F;%24%7Bimg%7D&#x2F;屏幕截图 2024-04-07 100545.png” alt&#x3D;”image” &#x2F;)</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;redis基础-02&quot;&gt;&lt;a href=&quot;#redis基础-02&quot; class=&quot;headerlink&quot; title=&quot;redis基础-02&quot;&gt;&lt;/a&gt;redis基础-02&lt;/h1&gt;&lt;h3 id=&quot;1、免费Redis图形化界面&quot;&gt;&lt;a href=&quot;#1、免费Redis图形化界面&quot; class=&quot;headerlink&quot; title=&quot;1、免费Redis图形化界面&quot;&gt;&lt;/a&gt;1、免费Redis图形化界面&lt;/h3&gt;&lt;h5 id=&quot;1-1-下载&quot;&gt;&lt;a href=&quot;#1-1-下载&quot; class=&quot;headerlink&quot; title=&quot;1.1 下载&quot;&gt;&lt;/a&gt;1.1 下载&lt;/h5&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/lework/RedisDesktopManager-Windows/releases&quot;&gt;RESP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;![image](“&amp;#x2F;images&amp;#x2F;%24%7Bimg%7D&amp;#x2F;屏幕截图 2024-04-07 092320.png” alt&amp;#x3D;”image” &amp;#x2F;)&lt;/p&gt;</summary>
    
    
    
    <category term="redis" scheme="http://example.com/categories/redis/"/>
    
    
    <category term="redis" scheme="http://example.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>redis基础-01</title>
    <link href="http://example.com/2024/04/06/redis%E5%9F%BA%E7%A1%80-01/"/>
    <id>http://example.com/2024/04/06/redis%E5%9F%BA%E7%A1%80-01/</id>
    <published>2024-04-06T14:35:46.902Z</published>
    <updated>2024-04-07T02:26:51.772Z</updated>
    
    <content type="html"><![CDATA[<h1 id="redis基础-01"><a href="#redis基础-01" class="headerlink" title="redis基础-01"></a>redis基础-01</h1><h3 id="1、redis官网"><a href="#1、redis官网" class="headerlink" title="1、redis官网"></a>1、redis官网</h3><p><a href="https://www.redis.io/">redis官网</a></p><p><a href="https://redis.io/community/">redis官方命令文档</a></p><span id="more"></span><h3 id="2、redis的安装"><a href="#2、redis的安装" class="headerlink" title="2、redis的安装"></a>2、redis的安装</h3><p>下载虚拟机</p><p>下载CntOS</p><p>到官网下载redis</p><h5 id="2-1-解压redis"><a href="#2-1-解压redis" class="headerlink" title="2.1 解压redis"></a>2.1 解压redis</h5><p>将redis压缩包移到待安装目录下</p><p>命令窗输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf redis压缩包名</span><br></pre></td></tr></table></figure><h5 id="2-2-安装C和C-编译环境"><a href="#2-2-安装C和C-编译环境" class="headerlink" title="2.2 安装C和C++ 编译环境"></a>2.2 安装C和C++ 编译环境</h5><p>进入解压好的redis</p><p>命令窗输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc-c++</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc-c++ -y</span><br></pre></td></tr></table></figure><h5 id="2-3-编译C代码-make"><a href="#2-3-编译C代码-make" class="headerlink" title="2.3 编译C代码 make"></a>2.3 编译C代码 make</h5><p>进入到redis源码目录下</p><p>命令窗输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install  //会装在默认路径下</span><br></pre></td></tr></table></figure><p>可以通过 prefix来指定安装路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install PREFIX=/usr/local/redis </span><br></pre></td></tr></table></figure><h5 id="2-4-启动redis-server-服务器"><a href="#2-4-启动redis-server-服务器" class="headerlink" title="2.4 启动redis-server 服务器"></a>2.4 启动redis-server 服务器</h5><p>cd 进入到你安装的redis 目录下， 我的是&#x2F;usr&#x2F;local&#x2F;redis</p><p>命令行输入ll，查看当前目录如下图所示，只有bin文件</p><p>![image](“&#x2F;images&#x2F;%24%7Bimg%7D&#x2F;屏幕截图 2024-04-06 214624.png” alt&#x3D;”image” &#x2F;)</p><p>命令窗输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd bin   // 进入bin文件</span><br><span class="line">ll</span><br></pre></td></tr></table></figure><p>目录如下所示（redis.conf除外，后面配置）</p><p>![image](“&#x2F;images&#x2F;%24%7Bimg%7D&#x2F;屏幕截图 2024-04-06 214906.png” alt&#x3D;”image” &#x2F;)</p><p>命令窗输入，启动redis-server：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-server</span><br></pre></td></tr></table></figure><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-06 215315.png" alt="image" /><h3 id="3、redis的启动模式"><a href="#3、redis的启动模式" class="headerlink" title="3、redis的启动模式"></a>3、redis的启动模式</h3><ul><li><p>默认启动模式，redis启动的时候，是前台启动模式，redis启动后，界面会直接阻挡默认的linux操作窗口 </p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-06 215315.png" alt="image" style="zoom:150%;" /></li><li><p>后台启动模式，redis启动后，不会阻挡住linux操作窗口 </p><p>![image](“&#x2F;images&#x2F;%24%7Bimg%7D&#x2F;屏幕截图 2024-04-06 220450.png” alt&#x3D;”image” &#x2F;)</p></li></ul><h5 id="3-1-复制一份redis-conf"><a href="#3-1-复制一份redis-conf" class="headerlink" title="3.1 复制一份redis.conf"></a>3.1 复制一份redis.conf</h5><p>将redis解压后的安装包中 redis.conf 配置文件复制一份到  &#x2F;usr&#x2F;local&#x2F;redis&#x2F;bin（安装自己安装路径）</p><p>命令窗输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp redis.conf /usr/local/redis/bin</span><br></pre></td></tr></table></figure><p>![image](“&#x2F;images&#x2F;%24%7Bimg%7D&#x2F;屏幕截图 2024-04-06 214906.png” alt&#x3D;”image” &#x2F;)</p><h5 id="3-2-修改redis-conf-中配置"><a href="#3-2-修改redis-conf-中配置" class="headerlink" title="3.2 修改redis.conf 中配置"></a>3.2 修改redis.conf 中配置</h5><p>cd 到 &#x2F;usr&#x2F;local&#x2F;redis&#x2F;bin</p><p>命令窗输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim redis.conf</span><br></pre></td></tr></table></figure><p>将下方所示的daemonize no 改为 yes</p><p>![image](“&#x2F;images&#x2F;%24%7Bimg%7D&#x2F;屏幕截图 2024-04-06 220118.png” alt&#x3D;”image” &#x2F;)</p><p>保存退出</p><p>命令窗输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-server redis.conf</span><br></pre></td></tr></table></figure><p>![image](“&#x2F;images&#x2F;%24%7Bimg%7D&#x2F;屏幕截图 2024-04-06 220450.png” alt&#x3D;”image” &#x2F;)</p><h5 id="3-3-确认redis-sevrer启动成功"><a href="#3-3-确认redis-sevrer启动成功" class="headerlink" title="3.3 确认redis-sevrer启动成功"></a>3.3 确认redis-sevrer启动成功</h5><p>（1）通过启动redis-cli 客户端去连接服务器</p><p>bin目录下命令行输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli</span><br></pre></td></tr></table></figure><p>如下图所示，则启动成功</p><p>![image](“&#x2F;images&#x2F;%24%7Bimg%7D&#x2F;屏幕截图 2024-04-06 220757.png” alt&#x3D;”image” &#x2F;)</p><p>（2）进程查看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux|grep redis</span><br></pre></td></tr></table></figure><p>![image](“&#x2F;images&#x2F;%24%7Bimg%7D&#x2F;屏幕截图 2024-04-06 220935.png” alt&#x3D;”image” &#x2F;)</p><h5 id="3-4-关闭redis-sevrer"><a href="#3-4-关闭redis-sevrer" class="headerlink" title="3.4 关闭redis-sevrer"></a>3.4 关闭redis-sevrer</h5><p>（1）通过redis-cli客户端发送命令给 redis服务器 进行关闭</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutdown</span><br></pre></td></tr></table></figure><p>![image](“&#x2F;images&#x2F;%24%7Bimg%7D&#x2F;屏幕截图 2024-04-06 221220.png” alt&#x3D;”image” &#x2F;)</p><p>（2）杀死进程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -9 进程id</span><br></pre></td></tr></table></figure><p>![image](“&#x2F;images&#x2F;%24%7Bimg%7D&#x2F;屏幕截图 2024-04-06 221436.png” alt&#x3D;”image” &#x2F;)</p><h5 id="3-5-指定ip和端口号-去连接服务器"><a href="#3-5-指定ip和端口号-去连接服务器" class="headerlink" title="3.5 指定ip和端口号 去连接服务器"></a>3.5 指定ip和端口号 去连接服务器</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr   // 查询当前Linux系统IP地址</span><br></pre></td></tr></table></figure><p>获取ip地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli -h [ip地址] -p [端口号（默认为6379）]</span><br></pre></td></tr></table></figure><h3 id="4、redis基本操作"><a href="#4、redis基本操作" class="headerlink" title="4、redis基本操作"></a>4、redis基本操作</h3><ol><li><p>存储String 类型</p><p>（1）存储String 类型</p><p>（2）当redis存储的时候，如果存了多次相同key，不同值，后面的值会覆盖之前的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set key value</span><br></pre></td></tr></table></figure><p>![image](“&#x2F;images&#x2F;%24%7Bimg%7D&#x2F;屏幕截图 2024-04-06 222250.png” alt&#x3D;”image” )</p></li><li><p>获取string的值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get key</span><br></pre></td></tr></table></figure><p>![image](“&#x2F;images&#x2F;%24%7Bimg%7D&#x2F;屏幕截图 2024-04-06 222605.png” alt&#x3D;”image” )</p></li><li><p>查看当前库所有key名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keys *</span><br></pre></td></tr></table></figure><p>![image](“&#x2F;images&#x2F;%24%7Bimg%7D&#x2F;屏幕截图 2024-04-06 222724.png” alt&#x3D;”image” )</p></li><li><p>切换数据库命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 数字   // 1-15,共16个库</span><br></pre></td></tr></table></figure><p>![image](“&#x2F;images&#x2F;%24%7Bimg%7D&#x2F;屏幕截图 2024-04-06 222807.png” alt&#x3D;”image” )</p></li><li><p>删除 redis中数据 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">del key</span><br></pre></td></tr></table></figure><p>![image](“&#x2F;images&#x2F;%24%7Bimg%7D&#x2F;屏幕截图 2024-04-06 223222.png” alt&#x3D;”image” )</p></li><li><p>清空当前库的所有数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flushdb</span><br></pre></td></tr></table></figure></li><li><p>清空所有库的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flushall </span><br></pre></td></tr></table></figure></li><li><p>key的过期时间 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expire key [时间(s)]</span><br></pre></td></tr></table></figure></li><li><p>知道key的剩余时间 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ttl key</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;redis基础-01&quot;&gt;&lt;a href=&quot;#redis基础-01&quot; class=&quot;headerlink&quot; title=&quot;redis基础-01&quot;&gt;&lt;/a&gt;redis基础-01&lt;/h1&gt;&lt;h3 id=&quot;1、redis官网&quot;&gt;&lt;a href=&quot;#1、redis官网&quot; class=&quot;headerlink&quot; title=&quot;1、redis官网&quot;&gt;&lt;/a&gt;1、redis官网&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.redis.io/&quot;&gt;redis官网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://redis.io/community/&quot;&gt;redis官方命令文档&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="redis" scheme="http://example.com/categories/redis/"/>
    
    
    <category term="redis" scheme="http://example.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>Git上传项目</title>
    <link href="http://example.com/2024/03/04/git%E4%B8%8A%E4%BC%A0%E9%A1%B9%E7%9B%AE/"/>
    <id>http://example.com/2024/03/04/git%E4%B8%8A%E4%BC%A0%E9%A1%B9%E7%9B%AE/</id>
    <published>2024-03-04T10:55:21.980Z</published>
    <updated>2024-03-06T10:59:17.833Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git上传项目"><a href="#Git上传项目" class="headerlink" title="Git上传项目"></a>Git上传项目</h1><h3 id="1、为GitHub账户设置SSH-Key"><a href="#1、为GitHub账户设置SSH-Key" class="headerlink" title="1、为GitHub账户设置SSH Key"></a>1、为GitHub账户设置SSH Key</h3><h5 id="1-1-检测是否已生成密钥"><a href="#1-1-检测是否已生成密钥" class="headerlink" title="1.1 检测是否已生成密钥"></a>1.1 检测是否已生成密钥</h5><p>第一步，检测是否已经生成了密钥，ls出现id_rsa与id_rsa.pub则已生成密钥。</p><p><img src="/images/$%7Bimg%7D/20240304-1620.png" alt="image"></p><p>id_rsa与id_rsa.pub可以在目录C:\Users\用户名\.ssh里面找到。</p><span id="more"></span><h5 id="1-2-生成SSH-Key"><a href="#1-2-生成SSH-Key" class="headerlink" title="1.2 生成SSH Key"></a>1.2 生成SSH Key</h5><p>已经有了密钥可以跳过。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C “xxxxxx@qq.com”</span><br></pre></td></tr></table></figure><p>可以直接回车生成密钥。</p><p><img src="/images/$%7Bimg%7D/20240304-1633.png" alt="image"></p><p>生成成功后，在目录C:\Users\用户名\.ssh里，打开id_rsa.pub，复制ssh key公钥。</p><h5 id="1-3-为GitHub账号配置SSH-Key"><a href="#1-3-为GitHub账号配置SSH-Key" class="headerlink" title="1.3 为GitHub账号配置SSH Key"></a>1.3 为GitHub账号配置SSH Key</h5><p>点击头像，找到Setting，<strong>打开设置</strong>。</p><img src="/images/%24%7Bimg%7D/20240304-1641.png" alt="image" style="zoom: 50%;" /><p>找到 <strong>SSH and GPG Keys</strong>，点击 <strong>SSH Keys</strong> 右侧的 <strong>New SSH Key</strong> 新增密钥，填上标题。</p><p><img src="/images/$%7Bimg%7D/20240304-1643.png" alt="image"></p><p>填上标题和密钥，点击 <strong>Add SSH Key</strong>。</p><img src="/images/%24%7Bimg%7D/20240304-1649.png" alt="image" style="zoom:50%;" /><p>验证身份后，github账号的SSH Keys配置完成。</p><p><img src="/images/$%7Bimg%7D/20240304-1651.png" alt="image"></p><h3 id="2、上传本地项目到GitHub"><a href="#2、上传本地项目到GitHub" class="headerlink" title="2、上传本地项目到GitHub"></a>2、上传本地项目到GitHub</h3><h5 id="2-1-建立本地仓库"><a href="#2-1-建立本地仓库" class="headerlink" title="2.1 建立本地仓库"></a>2.1 建立本地仓库</h5><p>到自定文件夹下，鼠标右击进入 git bash，执行指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure><p><img src="/images/$%7Bimg%7D/20240304-1700.png" alt="image"></p><p>初始化成功后，项目里多出一个隐藏文件夹 .git</p><p><img src="/images/$%7Bimg%7D/20240304-1702.png" alt="image"></p><p>将需要提交上传的项目放到该目录下</p><p>将所有文件添加到仓库，执行指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br></pre></td></tr></table></figure><p>将文件提交到仓库，双引号内是提交注释，执行指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m &quot;提交文件&quot;</span><br></pre></td></tr></table></figure><p><img src="/images/$%7Bimg%7D/20240304-1710.png" alt="image"></p><p>到此，本地仓库创建完成。</p><h5 id="2-2-关联GitHub"><a href="#2-2-关联GitHub" class="headerlink" title="2.2 关联GitHub"></a>2.2 关联GitHub</h5><p>到GitHub创建的项目下复制SSH地址。</p><img src="/images/%24%7Bimg%7D/20240304-1713.png" alt="image" style="zoom:50%;" /><p>执行指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add origin git@github.com:lu5216/subject.git</span><br></pre></td></tr></table></figure><h5 id="2-3-上传本地文件"><a href="#2-3-上传本地文件" class="headerlink" title="2.3 上传本地文件"></a>2.3 上传本地文件</h5><p>执行指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin master</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin master -f</span><br></pre></td></tr></table></figure><h3 id="3、各种上传问题"><a href="#3、各种上传问题" class="headerlink" title="3、各种上传问题"></a>3、各种上传问题</h3><h5 id="3-1-当上传的文件过大时（超过100MB），报错如下："><a href="#3-1-当上传的文件过大时（超过100MB），报错如下：" class="headerlink" title="3.1 当上传的文件过大时（超过100MB），报错如下："></a>3.1 当上传的文件过大时（超过100MB），报错如下：</h5><img src="/images/%24%7Bimg%7D/20240304-1727.png"/><p>解决方法：</p><p>下载 <a href="https://git-lfs.com/">Git-LFS</a> ，并安装到git目录下D:\Git\Git\bin\Git LFS。</p><p>进给安装后的目录，打开git bash，执行指令（这个命令只需执行这一次即可）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git lfs install  #安装大文件上传应用 </span><br></pre></td></tr></table></figure><p>到仓库目录，打开 GitBash，追踪需要上传的大文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git lfs track *  #追踪要上传的大文件，*表示路径下的所有文件 </span><br></pre></td></tr></table></figure><p>添加要上传的文件属性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add .gitattributes   #添加先上传的属性文件</span><br></pre></td></tr></table></figure><p>上传属性文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;first commit&quot;   #添加属性文件上传的说明</span><br><span class="line">git remote add origin git@github.com:lu5216/subject.git   #建立本地和Github仓库的链接 </span><br><span class="line">git push -u origin main        #上传属性文件</span><br></pre></td></tr></table></figure><p>接下来按常规步骤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .                      #添加要上传的大文件</span><br><span class="line">git commit -m &quot;Git LFS commit&quot; #添加大文件上传的说明 </span><br><span class="line">git push origin master         #上传大文件</span><br></pre></td></tr></table></figure><h5 id="3-2、error-failed-to-push-some-refs-to"><a href="#3-2、error-failed-to-push-some-refs-to" class="headerlink" title="3.2、error: failed to push some refs to"></a>3.2、error: failed to push some refs to</h5><img src="/images/%24%7Bimg%7D/20240304 -1840.png"/><p>问题原因：远程库与本地库不一致造成的</p><p>解决办法：将远程库更新合并到本地库，执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull --rebase origin main</span><br></pre></td></tr></table></figure><p>最后执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin main</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Git上传项目&quot;&gt;&lt;a href=&quot;#Git上传项目&quot; class=&quot;headerlink&quot; title=&quot;Git上传项目&quot;&gt;&lt;/a&gt;Git上传项目&lt;/h1&gt;&lt;h3 id=&quot;1、为GitHub账户设置SSH-Key&quot;&gt;&lt;a href=&quot;#1、为GitHub账户设置SSH-Key&quot; class=&quot;headerlink&quot; title=&quot;1、为GitHub账户设置SSH Key&quot;&gt;&lt;/a&gt;1、为GitHub账户设置SSH Key&lt;/h3&gt;&lt;h5 id=&quot;1-1-检测是否已生成密钥&quot;&gt;&lt;a href=&quot;#1-1-检测是否已生成密钥&quot; class=&quot;headerlink&quot; title=&quot;1.1 检测是否已生成密钥&quot;&gt;&lt;/a&gt;1.1 检测是否已生成密钥&lt;/h5&gt;&lt;p&gt;第一步，检测是否已经生成了密钥，ls出现id_rsa与id_rsa.pub则已生成密钥。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/$%7Bimg%7D/20240304-1620.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;id_rsa与id_rsa.pub可以在目录C:&#92;Users&#92;用户名&#92;.ssh里面找到。&lt;/p&gt;</summary>
    
    
    
    <category term="Git" scheme="http://example.com/categories/Git/"/>
    
    
    <category term="Git上传项目" scheme="http://example.com/tags/Git%E4%B8%8A%E4%BC%A0%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="Git上传项目常见错误" scheme="http://example.com/tags/Git%E4%B8%8A%E4%BC%A0%E9%A1%B9%E7%9B%AE%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/"/>
    
  </entry>
  
  <entry>
    <title>我的博客</title>
    <link href="http://example.com/2024/02/26/hello-blog/"/>
    <id>http://example.com/2024/02/26/hello-blog/</id>
    <published>2024-02-26T07:51:31.291Z</published>
    <updated>2024-03-06T11:07:22.783Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎！！！</p><h2 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h2><h3 id="个人简介"><a href="#个人简介" class="headerlink" title="个人简介"></a>个人简介</h3><p>无</p><h3 id="博客简介"><a href="#博客简介" class="headerlink" title="博客简介"></a>博客简介</h3><p>本博客由 <a href="https://hexo.io/">Hexo</a> &amp; <a href="https://theme-next.org/">NexT.Gemini</a> 强力驱动</p><h3 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h3><p>1、<a href="https://hexo.io/zh-cn/docs/">Hexo官方文档</a></p><p>2、<a href="https://theme-next.org/">NexT.Gemini</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;欢迎！！！&lt;/p&gt;
&lt;h2 id=&quot;博客&quot;&gt;&lt;a href=&quot;#博客&quot; class=&quot;headerlink&quot; title=&quot;博客&quot;&gt;&lt;/a&gt;博客&lt;/h2&gt;&lt;h3 id=&quot;个人简介&quot;&gt;&lt;a href=&quot;#个人简介&quot; class=&quot;headerlink&quot; title=&quot;个人简介</summary>
      
    
    
    
    
  </entry>
  
</feed>
