<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Spring框架面经</title>
      <link href="/2024/07/22/MySQL%E9%9D%A2%E7%BB%8F/"/>
      <url>/2024/07/22/MySQL%E9%9D%A2%E7%BB%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-11 203224.png" alt="image" style="zoom: 80%;" /><h3 id="1、优化"><a href="#1、优化" class="headerlink" title="1、优化"></a>1、优化</h3><h5 id="1-1-定位慢查询"><a href="#1-1-定位慢查询" class="headerlink" title="1.1 定位慢查询"></a>1.1 定位慢查询</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-11 211102.png" alt="image" style="zoom: 80%;" /><h5 id="1-2-SQL执行计划"><a href="#1-2-SQL执行计划" class="headerlink" title="1.2 SQL执行计划"></a>1.2 SQL执行计划</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-11 222046.png" alt="image" style="zoom: 80%;" /><h5 id="1-3-索引"><a href="#1-3-索引" class="headerlink" title="1.3 索引 *"></a>1.3 索引 *</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-12 201034.png" alt="image" style="zoom: 80%;" /><h6 id="1-3-1-B-树"><a href="#1-3-1-B-树" class="headerlink" title="1.3.1 B+树"></a>1.3.1 B+树</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-12 200351.png" alt="image" style="zoom: 80%;" /><h6 id="1-3-2-聚簇-聚集-索引-与-非聚簇-二级-索引"><a href="#1-3-2-聚簇-聚集-索引-与-非聚簇-二级-索引" class="headerlink" title="1.3.2 聚簇(聚集)索引 与 非聚簇(二级)索引"></a>1.3.2 聚簇(聚集)索引 与 非聚簇(二级)索引</h6><table><thead><tr><th>分类</th><th>含义</th><th>特点</th></tr></thead><tbody><tr><td>聚集索引</td><td>将数据存储与索引放到一块，索引结构的叶子节点保存了行数据</td><td>必须有，且只有一个</td></tr><tr><td>非聚集索引</td><td>将数据与索引分开储存，索引结构的叶子节点关联的是对应的主键</td><td>可以存在多个</td></tr></tbody></table><blockquote><p><strong>聚集索引选取规则：</strong></p><ul><li>如果存在主键，主键索引就是聚集索引；</li><li>如果不存在主键，将使用第一个唯一（UNIQUE）索引作为聚集索引；</li><li>如果表没有主键，或没有合适的唯一索引，则InnoDB会自动生成一个rowid作为隐藏的聚集索引；</li></ul></blockquote><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-17 211252.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-17 211538.png" alt="image" style="zoom: 80%;" /><blockquote><p><strong>回表查询</strong>：通过二级索引找到对应的主键值，到聚集随意中查找整行数据，这个过程叫做回表。</p></blockquote><h6 id="1-3-2-覆盖索引"><a href="#1-3-2-覆盖索引" class="headerlink" title="1.3.2 覆盖索引"></a>1.3.2 覆盖索引</h6><blockquote><p><strong>覆盖查询</strong>：是指查询使用了索引，并且需要返回的列，在该索引中已经全部能够找到。</p><ul><li>使用id查询，直接走聚集索引查询，一次索引扫描，直接返回数据，性能高；</li><li>如果返回的列中没有创建索引，有可能会触发回表查询，尽量避免使用select *</li></ul></blockquote><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-17 212327.png" alt="image" style="zoom: 80%;" /><blockquote><p><strong>MySQL超大分页查询</strong></p></blockquote><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-17 213453.png" alt="image" style="zoom: 80%;" /><h6 id="1-3-2-索引创建的原则"><a href="#1-3-2-索引创建的原则" class="headerlink" title="1.3.2 索引创建的原则"></a>1.3.2 索引创建的原则</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-17 221613.png" alt="image" style="zoom: 80%;" /><h6 id="1-3-2-索引失效？"><a href="#1-3-2-索引失效？" class="headerlink" title="1.3.2 索引失效？"></a>1.3.2 索引失效？</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-17 225119.png" alt="image" style="zoom: 80%;" /><h5 id="1-4-SQL优化经验"><a href="#1-4-SQL优化经验" class="headerlink" title="1.4 SQL优化经验"></a>1.4 SQL优化经验</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-17 230056.png" alt="image" style="zoom: 80%;" /><h3 id="2、其他面试题"><a href="#2、其他面试题" class="headerlink" title="2、其他面试题"></a>2、其他面试题</h3><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-17 231542.png" alt="image" style="zoom: 80%;" /><h5 id="2-1-事务相关"><a href="#2-1-事务相关" class="headerlink" title="2.1 事务相关"></a>2.1 事务相关</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-17 231749.png" alt="image" style="zoom: 80%;" /><h6 id="2-1-1-事务特性"><a href="#2-1-1-事务特性" class="headerlink" title="2.1.1 事务特性"></a>2.1.1 事务特性</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-17 231722.png" alt="image" style="zoom: 80%;" /><h6 id="2-1-2-隔离级别"><a href="#2-1-2-隔离级别" class="headerlink" title="2.1.2 隔离级别"></a>2.1.2 隔离级别</h6><blockquote><p>并发事务问题？</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-17 232011.png" alt="image" style="zoom: 80%;" /><p>隔离级别</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-17 232306.png" alt="image" style="zoom: 80%;" /></blockquote><h6 id="2-1-3-undo-log-和-redo-log"><a href="#2-1-3-undo-log-和-redo-log" class="headerlink" title="2.1.3 undo log 和 redo log"></a>2.1.3 undo log 和 redo log</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-17 232912.png" alt="image" style="zoom: 80%;" /><h6 id="2-1-4-MVCC"><a href="#2-1-4-MVCC" class="headerlink" title="2.1.4 MVCC"></a>2.1.4 MVCC</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-22 231749.png" alt="image" style="zoom: 80%;" /><h5 id="2-2-主从同步原理"><a href="#2-2-主从同步原理" class="headerlink" title="2.2 主从同步原理"></a>2.2 主从同步原理</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-17 230356.png" alt="image" style="zoom: 80%;" /><h5 id="2-3-分库分表"><a href="#2-3-分库分表" class="headerlink" title="2.3 分库分表"></a>2.3 分库分表</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-17 230448.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-17 231446.png" alt="image" style="zoom: 80%;" />]]></content>
      
      
      <categories>
          
          <category> Spring框架 </category>
          
          <category> Java面经 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring框架 </tag>
            
            <tag> Java面经 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微服务面经</title>
      <link href="/2024/07/10/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%9D%A2%E7%BB%8F/"/>
      <url>/2024/07/10/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%9D%A2%E7%BB%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h1><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 144131.png" alt="image" style="zoom: 80%;" /><span id="more"></span><h3 id="1、Spring-Cloud"><a href="#1、Spring-Cloud" class="headerlink" title="1、Spring Cloud"></a>1、Spring Cloud</h3><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 145422.png" alt="image" style="zoom: 150%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 145537.png" alt="image" style="zoom: 80%;" /><h5 id="1-1-服务注册"><a href="#1-1-服务注册" class="headerlink" title="1.1 服务注册"></a>1.1 服务注册</h5><h6 id="1-1-1-Eureka"><a href="#1-1-1-Eureka" class="headerlink" title="1.1.1 Eureka"></a>1.1.1 Eureka</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 150408.png" alt="image" style="zoom: 80%;" /> <img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 150326.png" alt="image" style="zoom: 150%;" /><h6 id="1-1-1-Nacos"><a href="#1-1-1-Nacos" class="headerlink" title="1.1.1 Nacos"></a>1.1.1 Nacos</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 150846.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 151001.png" alt="image" style="zoom: 80%;" /><h5 id="1-2-负载均衡"><a href="#1-2-负载均衡" class="headerlink" title="1.2 负载均衡"></a>1.2 负载均衡</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 151154.png" alt="image" style="zoom: 80%;" /><h6 id="1-2-1-Ribbon负载均衡策略"><a href="#1-2-1-Ribbon负载均衡策略" class="headerlink" title="1.2.1 Ribbon负载均衡策略"></a>1.2.1 Ribbon负载均衡策略</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 151412.png" alt="image" style="zoom: 80%;" /><h6 id="1-2-2-自定义负载均衡策略"><a href="#1-2-2-自定义负载均衡策略" class="headerlink" title="1.2.2 自定义负载均衡策略"></a>1.2.2 自定义负载均衡策略</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 151543.png" alt="image" style="zoom: 80%;" /><h5 id="1-3-服务雪崩"><a href="#1-3-服务雪崩" class="headerlink" title="1.3 服务雪崩"></a>1.3 服务雪崩</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 151825.png" alt="image" style="zoom: 80%;" /><h6 id="1-3-1-降级"><a href="#1-3-1-降级" class="headerlink" title="1.3.1 降级"></a>1.3.1 降级</h6><p>降级太多，回出发熔断机制</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 152136.png" alt="image" style="zoom: 80%;" /><h6 id="1-3-2-熔断"><a href="#1-3-2-熔断" class="headerlink" title="1.3.2 熔断"></a>1.3.2 熔断</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 152547.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 152739.png" alt="image" style="zoom: 80%;" /><h5 id="1-4-监控"><a href="#1-4-监控" class="headerlink" title="1.4 监控"></a>1.4 监控</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 164909.png" alt="image" style="zoom: 80%;" /><h6 id="1-4-1-Skywalking"><a href="#1-4-1-Skywalking" class="headerlink" title="1.4.1 Skywalking"></a>1.4.1 Skywalking</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 153756.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 164825.png" alt="image" style="zoom: 80%;" /><h3 id="2、业务相关"><a href="#2、业务相关" class="headerlink" title="2、业务相关"></a>2、业务相关</h3><h5 id="2-1-限流"><a href="#2-1-限流" class="headerlink" title="2.1 限流"></a>2.1 限流</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 202338.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 203446.png" alt="image" style="zoom: 80%;" /><h6 id="2-1-1-漏桶算法"><a href="#2-1-1-漏桶算法" class="headerlink" title="2.1.1 漏桶算法"></a>2.1.1 漏桶算法</h6><blockquote><ul><li>控制速率</li></ul><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 202512.png" alt="image" style="zoom: 80%;" /><ul><li>控制并发连接数</li></ul><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 202611.png" alt="image" style="zoom: 80%;" /></blockquote><h6 id="2-1-2-令牌桶算法"><a href="#2-1-2-令牌桶算法" class="headerlink" title="2.1.2 令牌桶算法"></a>2.1.2 令牌桶算法</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 203256.png" alt="image" style="zoom: 80%;" /><h5 id="2-2-分布式事务"><a href="#2-2-分布式事务" class="headerlink" title="2.2 分布式事务"></a>2.2 分布式事务</h5><h6 id="2-2-1-分布式理论"><a href="#2-2-1-分布式理论" class="headerlink" title="2.2.1 分布式理论"></a>2.2.1 分布式理论</h6><blockquote><ol><li><p><strong>CAP</strong></p><ul><li><strong>C</strong>onsistency（一致性）：用户访问分布式系统中的任意节点，得到的数据必须一致。</li><li><strong>A</strong>vailability（可用性）：用户访问集群中的任意健康节点，必须能得到响应，而不是超时或拒绝。</li><li><strong>P</strong>artition（分区）：因为故障或其他原因导致分布式系统中的部分节点与其他节点失去连接，形成独立分区。</li></ul></li><li><p><strong>BASE</strong></p><ul><li><p><strong>B</strong>asically <strong>A</strong>vailable（基本可用）：分布式系统在出现故障时，允许损失部分可用性，即保证核心可用。</p></li><li><p><strong>S</strong>oft State（软状态）：在一定时间内，允许出现中间状态，比如临时的不一致状态。</p></li><li><p><strong>E</strong>ventually Consistent（最终一致性）：虽然无法保证强一致性，但是在软件状态结束后，最终达到数据一致。</p></li></ul></li></ol></blockquote><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 205618.png" alt="image" style="zoom: 80%;" /><h6 id="2-2-2-分布式事务解决方案"><a href="#2-2-2-分布式事务解决方案" class="headerlink" title="2.2.2 分布式事务解决方案"></a>2.2.2 分布式事务解决方案</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 224928.png" alt="image" style="zoom: 80%;" /><p><strong>一、Seata</strong></p><blockquote><ul><li><p>TC（Transaction Coordinator）-  事务协调者：维护全局和分支事务的状态，协调全局事务提交或回滚。</p></li><li><p>TM（Transaction Manager）-  事务管理器：定义全局事务的范围、开始全局事务、提交或回滚全局事务。</p></li><li><p>RM（Resource Manager）-  资源管理器：管理分支事务处理的资源，与TC交谈以注册分支事务和报告分支事务的状态，并驱动分支事务提交或回滚。</p></li></ul></blockquote><p><strong>二、MQ分布式事务</strong></p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-07 224847.png" alt="image" style="zoom: 80%;" /><h5 id="2-3-分布式服务接口幂等性"><a href="#2-3-分布式服务接口幂等性" class="headerlink" title="2.3 分布式服务接口幂等性"></a>2.3 分布式服务接口幂等性</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-08 133519.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-08 133436.png" alt="image" style="zoom: 80%;" /><h5 id="2-4-分布式任务调度"><a href="#2-4-分布式任务调度" class="headerlink" title="2.4 分布式任务调度"></a>2.4 分布式任务调度</h5><h6 id="2-4-1-xxl-job"><a href="#2-4-1-xxl-job" class="headerlink" title="2.4.1 xxl-job"></a>2.4.1 xxl-job</h6><blockquote><p>解决的问题：</p><ul><li>解决集群任务的重复执行问题</li><li>cron表达式定义灵活</li><li>定时任务失败了，重试和统计</li><li>任务量大，分片执行</li></ul></blockquote><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-08 133956.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-08 134112.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-08 134313.png" alt="image" style="zoom: 80%;" />]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
          <category> Java面经 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java面经 </tag>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring框架面经</title>
      <link href="/2024/07/10/%E6%A1%86%E6%9E%B6%E9%9D%A2%E7%BB%8F/"/>
      <url>/2024/07/10/%E6%A1%86%E6%9E%B6%E9%9D%A2%E7%BB%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Spring框架"><a href="#Spring框架" class="headerlink" title="Spring框架"></a>Spring框架</h1><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-05 153203.png" alt="image" style="zoom: 80%;" /><span id="more"></span><h3 id="1、Spring"><a href="#1、Spring" class="headerlink" title="1、Spring"></a>1、Spring</h3><h5 id="1-1-Bean线程安全问题"><a href="#1-1-Bean线程安全问题" class="headerlink" title="1.1 Bean线程安全问题"></a>1.1 Bean线程安全问题</h5><p>Spring框架中的bean是单例的</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-05 154443.png" alt="image" style="zoom: 150%;" /> <img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-05 154723.png" alt="image" style="zoom: 80%;" /><blockquote><p>无状态的对象：可以简单理解为这个对象是否可修改，不可修改的对象称为无状态对象</p></blockquote><h5 id="1-2-AOP相关理解"><a href="#1-2-AOP相关理解" class="headerlink" title="1.2 AOP相关理解"></a>1.2 AOP相关理解</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-05 155359.png" alt="image" style="zoom: 80%;" /><h6 id="1-2-1-常见AOP使用场景"><a href="#1-2-1-常见AOP使用场景" class="headerlink" title="1.2.1 常见AOP使用场景"></a>1.2.1 常见AOP使用场景</h6><blockquote><ul><li><p>记录操作日志</p><p>（使用aop中的 环绕通知+切点表达式 找到要记录的方法，通过环绕通知的参数获取请求方法的参数，获取到参数以后，保存到数据库）</p></li><li><p>缓存处理</p></li><li><p>Spring中内置的事务处理</p></li></ul></blockquote><h6 id="1-2-2-事务是如何实现的"><a href="#1-2-2-事务是如何实现的" class="headerlink" title="1.2.2 事务是如何实现的"></a>1.2.2 事务是如何实现的</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-05 160424.png" alt="image" style="zoom: 80%;" /><h6 id="1-2-3-事务失效的场景"><a href="#1-2-3-事务失效的场景" class="headerlink" title="1.2.3 事务失效的场景"></a>1.2.3 事务失效的场景</h6><blockquote><ul><li><p>异常捕获处理</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-05 161542.png" alt="image" style="zoom: 80%;" /></li><li><p>抛出检查异常</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-05 161825.png" alt="image" style="zoom: 80%;" /></li><li><p>非public方法</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-05 161911.png" alt="image" style="zoom: 80%;" /></li></ul></blockquote><h5 id="1-3-Bean的生命周期"><a href="#1-3-Bean的生命周期" class="headerlink" title="1.3 Bean的生命周期"></a>1.3 Bean的生命周期</h5><p>Spring容器在进行实例化时，会将xml配置的<bean>的信息封装成一个BeanDefinition，Spring根据BeanDefinition来创建Bean对象，里面有很多的属性用来描述Bean。</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-05 215533.png" alt="image" style="zoom: 80%;" /><h5 id="1-4-循环依赖"><a href="#1-4-循环依赖" class="headerlink" title="1.4 循环依赖"></a>1.4 循环依赖</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-05 221156.png" alt="image" style="zoom: 80%;" /><blockquote><p>一级缓存：</p></blockquote><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-05 220939.png" alt="image" style="zoom: 80%;" /><blockquote><p>二级缓存：</p></blockquote><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-05 222044.png" alt="image" style="zoom: 80%;" /><blockquote><p>三级缓存：</p></blockquote><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-05 221935.png" alt="image" style="zoom: 80%;" /><p>构造方法存在的循环依赖：</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-05 222440.png" alt="image" style="zoom: 80%;" /><h3 id="2、Spring-MVC"><a href="#2、Spring-MVC" class="headerlink" title="2、Spring MVC"></a>2、Spring MVC</h3><h5 id="2-1-执行流程"><a href="#2-1-执行流程" class="headerlink" title="2.1 执行流程"></a>2.1 执行流程</h5><blockquote><ol><li><p>视图阶段（JSP）</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-05 223735.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-05 224126.png" alt="image" style="zoom: 80%;" /></li><li><p>前后端分离阶段（接口开发、异步）</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-05 223926.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-05 224226.png" alt="image" style="zoom: 80%;" /></li></ol></blockquote><h3 id="3、SpringBoot"><a href="#3、SpringBoot" class="headerlink" title="3、SpringBoot"></a>3、SpringBoot</h3><h5 id="3-1-自动配置原理"><a href="#3-1-自动配置原理" class="headerlink" title="3.1 自动配置原理"></a>3.1 自动配置原理</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-05 224744.png" alt="image" style="zoom: 80%;" /><h3 id="4、Mybatis"><a href="#4、Mybatis" class="headerlink" title="4、Mybatis"></a>4、Mybatis</h3><h5 id="4-1-执行流程"><a href="#4-1-执行流程" class="headerlink" title="4.1 执行流程"></a>4.1 执行流程</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-06 215113.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-06 215239.png" alt="image" style="zoom: 80%;" /><h5 id="4-2-延迟加载"><a href="#4-2-延迟加载" class="headerlink" title="4.2 延迟加载"></a>4.2 延迟加载</h5><h6 id="4-2-1-概念"><a href="#4-2-1-概念" class="headerlink" title="4.2.1 概念"></a>4.2.1 概念</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-06 220149.png" alt="image" style="zoom: 80%;" /><h6 id="4-2-2-原理"><a href="#4-2-2-原理" class="headerlink" title="4.2.2 原理"></a>4.2.2 原理</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-06 220329.png" alt="image" style="zoom: 80%;" /><h5 id="4-3-一二级缓存"><a href="#4-3-一二级缓存" class="headerlink" title="4.3 一二级缓存"></a>4.3 一二级缓存</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-06 233134.png" alt="image" style="zoom: 80%;" /><h6 id="4-3-1-一级缓存"><a href="#4-3-1-一级缓存" class="headerlink" title="4.3.1 一级缓存"></a>4.3.1 一级缓存</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-06 233022.png" alt="image" style="zoom: 80%;" /><h6 id="4-3-2-二级缓存"><a href="#4-3-2-二级缓存" class="headerlink" title="4.3.2 二级缓存"></a>4.3.2 二级缓存</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-06 233210.png" alt="image" style="zoom: 80%;" /><h6 id="4-3-3-面试问题"><a href="#4-3-3-面试问题" class="headerlink" title="4.3.3 面试问题"></a>4.3.3 面试问题</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-06 233320.png" alt="image" style="zoom: 80%;" /><h3 id="5、常见注解"><a href="#5、常见注解" class="headerlink" title="5、常见注解"></a>5、常见注解</h3><h5 id="5-1-Spring常见注解"><a href="#5-1-Spring常见注解" class="headerlink" title="5.1 Spring常见注解"></a>5.1 Spring常见注解</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-06 214431.png" alt="image" style="zoom: 80%;" /><h5 id="5-2-SpringMVC常见注解"><a href="#5-2-SpringMVC常见注解" class="headerlink" title="5.2 SpringMVC常见注解"></a>5.2 SpringMVC常见注解</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-06 214609.png" alt="image" style="zoom: 80%;" /><h5 id="5-3-SpringBoot常见注解"><a href="#5-3-SpringBoot常见注解" class="headerlink" title="5.3 SpringBoot常见注解"></a>5.3 SpringBoot常见注解</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-07-06 214644.png" alt="image" style="zoom: 80%;" />]]></content>
      
      
      <categories>
          
          <category> Spring框架 </category>
          
          <category> Java面经 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring框架 </tag>
            
            <tag> Java面经 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>消息中间件面经</title>
      <link href="/2024/07/10/%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6%E9%9D%A2%E7%BB%8F/"/>
      <url>/2024/07/10/%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6%E9%9D%A2%E7%BB%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="消息中间件"><a href="#消息中间件" class="headerlink" title="消息中间件"></a>消息中间件</h1><img src="/images/%24{img}/屏幕截图 2024-07-08 134756.png" alt="image" style="zoom: 80%;" /><span id="more"></span><h3 id="1、RabbitMQ"><a href="#1、RabbitMQ" class="headerlink" title="1、RabbitMQ"></a>1、RabbitMQ</h3><h5 id="1-1-如何保证消息不丢失？"><a href="#1-1-如何保证消息不丢失？" class="headerlink" title="1.1 如何保证消息不丢失？"></a>1.1 如何保证消息不丢失？</h5><img src="/images/%24{img}/屏幕截图 2024-07-08 202557.png" alt="image" style="zoom: 80%;" /><h5 id="1-2-消息重复消费问题如何解决？"><a href="#1-2-消息重复消费问题如何解决？" class="headerlink" title="1.2 消息重复消费问题如何解决？"></a>1.2 消息重复消费问题如何解决？</h5><blockquote><p>产生原因：网络抖动、消费者挂了</p></blockquote><blockquote><p>解饿方案：</p><ul><li>每条消息设置唯一标识ID；</li><li>幂等方案。</li></ul></blockquote><img src="/images/%24{img}/屏幕截图 2024-07-08 203128.png" alt="image" style="zoom: 80%;" /><h5 id="1-3-延迟队列"><a href="#1-3-延迟队列" class="headerlink" title="1.3 延迟队列"></a>1.3 延迟队列</h5><blockquote><ul><li>延迟队列：进入队列的消息会被延迟消费的队列</li><li>场景：超时订单、限时优惠、定时发布（视频、文章、作品等）</li></ul><p>延迟队列 &#x3D; 死信交换机 + TTL（生存时间）</p></blockquote><img src="/images/%24{img}/屏幕截图 2024-07-08 203618.png" alt="image" style="zoom: 80%;" /><img src="/images/%24{img}/屏幕截图 2024-07-08 203854.png" alt="image" style="zoom: 80%;" /><img src="/images/%24{img}/屏幕截图 2024-07-08 204004.png" alt="image" style="zoom: 80%;" /><h5 id="1-4-消息堆积怎么解决？"><a href="#1-4-消息堆积怎么解决？" class="headerlink" title="1.4 消息堆积怎么解决？"></a>1.4 消息堆积怎么解决？</h5><blockquote><p>消息堆积产生的原因：</p><img src="/images/%24{img}/屏幕截图 2024-07-08 204212.png" alt="image" style="zoom: 80%;" /></blockquote><blockquote><p>解决方法：</p><ol><li>增加更多消费者，提高消费速度。</li><li>在消费者内开启线程池加快消息处理速度。</li><li>扩大队列容积，提高堆积上限。</li></ol></blockquote><img src="/images/%24{img}/屏幕截图 2024-07-08 204536.png" alt="image" style="zoom: 80%;" /><h5 id="1-5-高可用机制"><a href="#1-5-高可用机制" class="headerlink" title="1.5 高可用机制"></a>1.5 高可用机制</h5><blockquote><ul><li>在生产环境下，使用集群来保证高可用性</li><li>普通集群（标准集群）、镜像集群、仲裁队列</li></ul></blockquote><img src="/images/%24{img}/屏幕截图 2024-07-08 204926.png" alt="image" style="zoom: 80%;" /><img src="/images/%24{img}/屏幕截图 2024-07-08 205304.png" alt="image" style="zoom: 80%;" /><img src="/images/%24{img}/屏幕截图 2024-07-08 205346.png" alt="image" style="zoom: 80%;" /><img src="/images/%24{img}/屏幕截图 2024-07-08 205459.png" alt="image" style="zoom: 80%;" /><h3 id="2、Kafka"><a href="#2、Kafka" class="headerlink" title="2、Kafka"></a>2、Kafka</h3><h5 id="2-1-如何保证消息不丢失？"><a href="#2-1-如何保证消息不丢失？" class="headerlink" title="2.1 如何保证消息不丢失？"></a>2.1 如何保证消息不丢失？</h5><img src="/images/%24{img}/屏幕截图 2024-07-10 213149.png" alt="image" style="zoom: 80%;" /><h5 id="2-2-如何保证消息的顺序性"><a href="#2-2-如何保证消息的顺序性" class="headerlink" title="2.2 如何保证消息的顺序性"></a>2.2 如何保证消息的顺序性</h5><img src="/images/%24{img}/屏幕截图 2024-07-10 220942.png" alt="image" style="zoom: 80%;" /><h5 id="2-3-高可用机制"><a href="#2-3-高可用机制" class="headerlink" title="2.3 高可用机制"></a>2.3 高可用机制</h5><img src="/images/%24{img}/屏幕截图 2024-07-10 221211.png" alt="image" style="zoom: 80%;" /><h5 id="2-4-高性能机制"><a href="#2-4-高性能机制" class="headerlink" title="2.4 高性能机制"></a>2.4 高性能机制</h5><img src="/images/%24{img}/屏幕截图 2024-07-10 223432.png" alt="image" style="zoom: 80%;" /><h5 id="2-5-数据清理机制"><a href="#2-5-数据清理机制" class="headerlink" title="2.5 数据清理机制"></a>2.5 数据清理机制</h5><img src="/images/%24{img}/屏幕截图 2024-07-10 223251.png" alt="image" style="zoom: 80%;" />]]></content>
      
      
      <categories>
          
          <category> 消息中间件 </category>
          
          <category> Java面经 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java面经 </tag>
            
            <tag> 消息中间件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis面经</title>
      <link href="/2024/06/22/Redis%E5%85%AB%E8%82%A1%E6%96%87/"/>
      <url>/2024/06/22/Redis%E5%85%AB%E8%82%A1%E6%96%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h1><h3 id="1、缓存"><a href="#1、缓存" class="headerlink" title="1、缓存"></a>1、缓存</h3><h5 id="1-1-缓存三兄弟"><a href="#1-1-缓存三兄弟" class="headerlink" title="1.1 缓存三兄弟"></a>1.1 缓存三兄弟</h5><blockquote><p>穿透无中生有key，布隆过滤null隔离。</p><p>缓存击穿过期key，锁与非期解难题。</p><p>雪崩大量过期key，过期时间要随机。</p><p>面试必考三兄弟，可用限流来保底。</p></blockquote><span id="more"></span><h6 id="一、穿透"><a href="#一、穿透" class="headerlink" title="一、穿透"></a>一、穿透</h6><blockquote><p>查询一个不存在的数据，DB查询不到数据也不会直接写入缓存，就导致每次请求都差数据库。</p></blockquote><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-09 170335.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-09 170239.png" alt="image" style="zoom: 150%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-09 170511.png" alt="image" style="zoom: 150%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-09 170423.png" alt="image" style="zoom: 80%;" /><h6 id="二、击穿"><a href="#二、击穿" class="headerlink" title="二、击穿"></a>二、击穿</h6><blockquote><p>给某个key设置了过期时间，当key过期时，恰好这个时间点对这个key有大量的并发请求过来，这些并发的请求可能会瞬间把DB压垮。</p></blockquote><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-09 171312.png" alt="image" style="zoom: 80%;" /><p>解决方案1：<strong>互斥锁</strong>（强一致、性能差）</p><p>解决方案2：<strong>逻辑过期</strong>（高可用、性能优，不能保证数据绝对一致）</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-09 171852.png" alt="image" style="zoom: 80%;" /><h6 id="三、雪崩"><a href="#三、雪崩" class="headerlink" title="三、雪崩"></a>三、雪崩</h6><blockquote><p>同一时段大量的缓存key同时失效 或者 Redis服务宕机，导致大量请求到达数据库，带来巨大压力。</p></blockquote><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-09 172945.png" alt="image" style="zoom: 80%;" /><h5 id="1-2-双写一致性"><a href="#1-2-双写一致性" class="headerlink" title="1.2 双写一致性"></a>1.2 双写一致性</h5><blockquote><p>当修改了数据库的数据也要同时更新缓存的数据，缓存和数据库的数据要保持一致。</p></blockquote><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-12 183448.png" alt="image" style="zoom: 80%;" /><blockquote><p><strong>问题：</strong>redis 做为缓存，mysql 的数据如何与redis进行同步？</p></blockquote><p>1、一致性要求高：（<strong>双写一致</strong>）</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-12 185110.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-12 185436.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-12 185539.png" alt="image" style="zoom: 80%;" /><p>2、允许延迟一致：（<strong>延迟双删</strong>）</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-12 184913.png" alt="image" style="zoom: 80%;" /><h5 id="1-3-持久化"><a href="#1-3-持久化" class="headerlink" title="1.3 持久化"></a>1.3 持久化</h5><h6 id="一、RDB（Redis-Database-Backup-file）"><a href="#一、RDB（Redis-Database-Backup-file）" class="headerlink" title="一、RDB（Redis Database Backup file）"></a>一、RDB（Redis Database Backup file）</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-12 192107.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-12 191008.png" alt="image" style="zoom: 80%;" /><h6 id="二、AOF（Append-Only-File）"><a href="#二、AOF（Append-Only-File）" class="headerlink" title="二、AOF（Append Only File）"></a>二、AOF（Append Only File）</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-12 191134.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-12 191317.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-12 191532.png" alt="image" style="zoom: 80%;" /><h6 id="三、RDB与AOF对比"><a href="#三、RDB与AOF对比" class="headerlink" title="三、RDB与AOF对比"></a>三、RDB与AOF对比</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-12 191559.png" alt="image" style="zoom: 80%;" /><h5 id="1-3-数据过期策略"><a href="#1-3-数据过期策略" class="headerlink" title="1.3 数据过期策略"></a>1.3 数据过期策略</h5><blockquote><p>Redis对数据设置数据有效时间，数据过期后，就需要将数据从内存中删除掉，可以按照不同的规则进行删除，这种删除规则被称为数据的删除策略。</p></blockquote><blockquote><p>两种Redis的数据过期策略进行配合使用。</p></blockquote><h6 id="一、惰性删除"><a href="#一、惰性删除" class="headerlink" title="一、惰性删除"></a>一、惰性删除</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-14 093145.png" alt="image" style="zoom: 80%;" /><h6 id="二、定期删除"><a href="#二、定期删除" class="headerlink" title="二、定期删除"></a>二、定期删除</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-14 093246.png" alt="image" style="zoom: 80%;" /><h5 id="1-4-数据淘汰策略"><a href="#1-4-数据淘汰策略" class="headerlink" title="1.4 数据淘汰策略"></a>1.4 数据淘汰策略</h5><blockquote><p>当Redis中的内存不够用时，此时向Redis中添加新的key，那么Redis就会按照某一种规则将内存中的数据删除掉，这种数据的删除规则被称为内存的淘汰策略。</p></blockquote><p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-14 094337.png" alt="image" style="zoom: 80%;" />最常用allkeys-lru</p><h3 id="2、分布式锁"><a href="#2、分布式锁" class="headerlink" title="2、分布式锁"></a>2、分布式锁</h3><h5 id="2-1、实现分布式锁"><a href="#2-1、实现分布式锁" class="headerlink" title="2.1、实现分布式锁"></a>2.1、实现分布式锁</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-15 215447.png" alt="image" style="zoom: 80%;" /><h5 id="2-2-合理控制有效时常"><a href="#2-2-合理控制有效时常" class="headerlink" title="2.2 合理控制有效时常"></a>2.2 合理控制有效时常</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-15 221214.png" alt="image" style="zoom: 80%;" /><h5 id="2-3-重入Redisson锁"><a href="#2-3-重入Redisson锁" class="headerlink" title="2.3 重入Redisson锁"></a>2.3 重入Redisson锁</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-15 221244.png" alt="image" style="zoom: 80%;" /><h5 id="2-4-主从数据一致问题"><a href="#2-4-主从数据一致问题" class="headerlink" title="2.4 主从数据一致问题"></a>2.4 主从数据一致问题</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-15 221308.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-15 221327.png" alt="image" style="zoom: 80%;" /><h5 id="2-5-小结"><a href="#2-5-小结" class="headerlink" title="2.5 小结"></a>2.5 小结</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-15 220835.png" alt="image" style="zoom: 80%;" /><h3 id="3、集群"><a href="#3、集群" class="headerlink" title="3、集群"></a>3、集群</h3><h5 id="3-1-主从同步（高并发读的问题）"><a href="#3-1-主从同步（高并发读的问题）" class="headerlink" title="3.1 主从同步（高并发读的问题）"></a>3.1 主从同步（高并发读的问题）</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-15 222309.png" alt="image" style="zoom: 80%;" /><h5 id="3-2-哨兵模式（高可用的问题）"><a href="#3-2-哨兵模式（高可用的问题）" class="headerlink" title="3.2 哨兵模式（高可用的问题）"></a>3.2 哨兵模式（高可用的问题）</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-15 223110.png" alt="image" style="zoom: 80%;" /><h5 id="3-3-分片集群结构"><a href="#3-3-分片集群结构" class="headerlink" title="3.3 分片集群结构"></a>3.3 分片集群结构</h5><blockquote><p>解决：</p><p>海量数据储存问题</p><p>高并发写的问题</p></blockquote><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-15 224532.png" alt="image" style="zoom: 80%;" /><h3 id="4、其他问题"><a href="#4、其他问题" class="headerlink" title="4、其他问题"></a>4、其他问题</h3><h5 id="4-1-问题"><a href="#4-1-问题" class="headerlink" title="4.1 问题"></a>4.1 问题</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-15 225101.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-06-15 225034.png" alt="image" style="zoom: 80%;" /><p>（仅用于自用，网上有许多大佬写的比我更好）</p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
          <category> Java面经 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java面经 </tag>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatisPlus</title>
      <link href="/2024/04/22/MyBatisPlus/"/>
      <url>/2024/04/22/MyBatisPlus/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="MybatisPlus"><a href="#MybatisPlus" class="headerlink" title="MybatisPlus"></a>MybatisPlus</h1><h3 id="1、相关网站"><a href="#1、相关网站" class="headerlink" title="1、相关网站"></a>1、相关网站</h3><p><a href="https://baomidou.com/">MyBatisPlus</a></p><p><a href="https://mvnrepository.com/">Maven Repository</a></p><p><a href="https://java.bejson.com/generator/">代码生成器</a></p><span id="more"></span><h3 id="2、快速引用"><a href="#2、快速引用" class="headerlink" title="2、快速引用"></a>2、快速引用</h3><h6 id="2-1、mapper"><a href="#2-1、mapper" class="headerlink" title="2.1、mapper"></a>2.1、mapper</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;tb_user&gt; &#123;</span><br><span class="line">    <span class="comment">// tb_user必须和表名相同</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="2-2、lombok类库"><a href="#2-2、lombok类库" class="headerlink" title="2.2、lombok类库"></a>2.2、lombok类库</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span><span class="comment">// 包含除构造方法外的其他方法</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@TableName(&quot;tb_user&quot;)</span>   <span class="comment">// 表名映射</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">tb_user</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@TableField(value = &quot;password&quot;, select = false)</span>     <span class="comment">// 字段映射, 不参与查询</span></span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String tel;</span><br><span class="line">    <span class="meta">@TableField(exist = false)</span>      <span class="comment">// 设置字段不存在于数据库</span></span><br><span class="line">    <span class="keyword">private</span> Integer onLine;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="2-3、开启MybatisPlus日志"><a href="#2-3、开启MybatisPlus日志" class="headerlink" title="2.3、开启MybatisPlus日志"></a>2.3、开启MybatisPlus日志</h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><h6 id="2-4、表名映射"><a href="#2-4、表名映射" class="headerlink" title="2.4、表名映射"></a>2.4、表名映射</h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">table-prefix:</span> <span class="string">tb_</span>  <span class="comment"># 表名为tb_user, domain为User</span></span><br></pre></td></tr></table></figure><h3 id="3、CRUD与分页功能"><a href="#3、CRUD与分页功能" class="headerlink" title="3、CRUD与分页功能"></a>3、CRUD与分页功能</h3><h6 id="3-1、CRUD"><a href="#3-1、CRUD" class="headerlink" title="3.1、CRUD"></a>3.1、CRUD</h6><p>（1）测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testGetAll</span><span class="params">()</span> &#123;</span><br><span class="line">    List&lt;tb_user&gt; userList = userMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">    System.out.println(userList);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testSelectById</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">tb_user</span> <span class="variable">tbUser</span> <span class="operator">=</span> userMapper.selectById(<span class="number">4L</span>);</span><br><span class="line">    System.out.println(tbUser);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testSave</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">tb_user</span> <span class="variable">tb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">tb_user</span>();</span><br><span class="line">    tb.setId(<span class="number">5L</span>);</span><br><span class="line">    tb.setName(<span class="string">&quot;austin&quot;</span>);</span><br><span class="line">    tb.setPassword(<span class="string">&quot;austin123&quot;</span>);</span><br><span class="line">    tb.setAge(<span class="number">24</span>);</span><br><span class="line">    tb.setTel(<span class="string">&quot;123123123&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userMapper.insert(tb);</span><br><span class="line">    System.out.println(i &gt; <span class="number">0</span> ? <span class="string">&quot;success&quot;</span> : <span class="string">&quot;fail&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testDelete</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userMapper.deleteById(<span class="number">5L</span>);</span><br><span class="line">    System.out.println(i &gt; <span class="number">0</span> ? <span class="string">&quot;success&quot;</span> : <span class="string">&quot;fail&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testUpdate</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">tb_user</span> <span class="variable">tb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">tb_user</span>();</span><br><span class="line">    tb.setId(<span class="number">2L</span>);</span><br><span class="line">    tb.setName(<span class="string">&quot;jack&quot;</span>);</span><br><span class="line">    tb.setPassword(<span class="string">&quot;jack123&quot;</span>);</span><br><span class="line">    tb.setTel(<span class="string">&quot;111111111&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userMapper.updateById(tb);</span><br><span class="line">    System.out.println(i &gt; <span class="number">0</span> ? <span class="string">&quot;success&quot;</span> : <span class="string">&quot;fail&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="3-2、分页功能"><a href="#3-2、分页功能" class="headerlink" title="3.2、分页功能"></a>3.2、分页功能</h6><p>（1）拦截器配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MPConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MybatisPlusInterceptor <span class="title function_">mybatisPlusInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">MybatisPlusInterceptor</span> <span class="variable">mpi</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MybatisPlusInterceptor</span>();</span><br><span class="line">        <span class="comment">// 分页拦截器</span></span><br><span class="line">        mpi.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">PaginationInnerInterceptor</span>());</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 乐观锁拦截器</span></span><br><span class="line">        mpi.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">OptimisticLockerInnerInterceptor</span>());</span><br><span class="line">        <span class="keyword">return</span> mpi;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（2）分页测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testGetByPage</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">IPage</span> <span class="variable">page</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Page</span>(<span class="number">1</span>,<span class="number">2</span>); <span class="comment">// 第1页，每页2条数据</span></span><br><span class="line">    userMapper.selectPage(page, <span class="literal">null</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;当前页码值：&quot;</span> + page.getCurrent());</span><br><span class="line">    System.out.println(<span class="string">&quot;每页显示数：&quot;</span> + page.getSize());</span><br><span class="line">    System.out.println(<span class="string">&quot;全部页码数：&quot;</span> + page.getPages());</span><br><span class="line">    System.out.println(<span class="string">&quot;全部数据数：&quot;</span> + page.getTotal());</span><br><span class="line">    System.out.println(<span class="string">&quot;当前页码数据：&quot;</span> + page.getRecords());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、查询条件"><a href="#4、查询条件" class="headerlink" title="4、查询条件"></a>4、查询条件</h3><h6 id="4-1、条件查询"><a href="#4-1、条件查询" class="headerlink" title="4.1、条件查询"></a>4.1、条件查询</h6><p>（1）方式1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lt小于, eq等于, gt大于</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testGetAll</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">QueryWrapper</span> <span class="variable">qw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>();</span><br><span class="line">    qw.lt(<span class="string">&quot;age&quot;</span>, <span class="number">18</span>);</span><br><span class="line">    List&lt;tb_user&gt; userList = userMapper.selectList(qw);</span><br><span class="line">    System.out.println(userList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（2）方式2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testGetAll</span><span class="params">()</span> &#123;</span><br><span class="line">    QueryWrapper&lt;tb_user&gt; qw = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>();</span><br><span class="line">    qw.lambda().lt(tb_user::getAge, <span class="number">18</span>);</span><br><span class="line">    List&lt;tb_user&gt; userList = userMapper.selectList(qw);</span><br><span class="line">    System.out.println(userList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（3）方式3</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testGetAll</span><span class="params">()</span> &#123;</span><br><span class="line">    LambdaQueryWrapper&lt;tb_user&gt; lqw = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>();</span><br><span class="line">    lqw.lt(tb_user::getAge, <span class="number">18</span>);</span><br><span class="line">    List&lt;tb_user&gt; userList = userMapper.selectList(lqw);</span><br><span class="line">    System.out.println(userList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（4）且、或</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testGetAll1</span><span class="params">()</span> &#123;</span><br><span class="line">    LambdaQueryWrapper&lt;tb_user&gt; lqw = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>();</span><br><span class="line">    lqw.lt(tb_user::getAge, <span class="number">30</span>).gt(tb_user::getAge, <span class="number">18</span>)<span class="comment">// 大于30 且 小于18</span></span><br><span class="line">    List&lt;tb_user&gt; userList = userMapper.selectList(lqw);</span><br><span class="line">    System.out.println(userList);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testGetAll2</span><span class="params">()</span> &#123;</span><br><span class="line">    LambdaQueryWrapper&lt;tb_user&gt; lqw = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>();</span><br><span class="line">    lqw.lt(tb_user::getAge, <span class="number">30</span>).or().gt(tb_user::getAge, <span class="number">18</span>)<span class="comment">// 大于30 或 小于18</span></span><br><span class="line">    List&lt;tb_user&gt; userList = userMapper.selectList(lqw);</span><br><span class="line">    System.out.println(userList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="4-2、条件查询null判定"><a href="#4-2、条件查询null判定" class="headerlink" title="4.2、条件查询null判定"></a>4.2、条件查询null判定</h6><p>（1）新建domain.query.tb_userQuery</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 需要条件查询的属性</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">tb_userQuery</span> <span class="keyword">extends</span> <span class="title class_">tb_user</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer age_up;<span class="comment">// 最大值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（2）测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testUserQuery</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 模拟页面传递的查询数据</span></span><br><span class="line">    <span class="type">tb_userQuery</span> <span class="variable">uq</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">tb_userQuery</span>();</span><br><span class="line">    uq.setAge(<span class="number">10</span>);</span><br><span class="line">    uq.setAge_up(<span class="number">30</span>);</span><br><span class="line">    <span class="comment">// null判定</span></span><br><span class="line">    LambdaQueryWrapper&lt;tb_user&gt; lqw = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>();</span><br><span class="line">    lqw.gt(<span class="literal">null</span>!=uq.getAge_up(), tb_user::getAge, uq.getAge());</span><br><span class="line">    lqw.lt(<span class="literal">null</span>!=uq.getAge_up() ,tb_user::getAge, uq.getAge_up());</span><br><span class="line">    List&lt;tb_user&gt; userList = userMapper.selectList(lqw);</span><br><span class="line">    System.out.println(userList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="4-3、查询投影"><a href="#4-3、查询投影" class="headerlink" title="4.3、查询投影"></a>4.3、查询投影</h6><p>（1）选择查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方式1</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testLQWSelect</span><span class="params">()</span> &#123;</span><br><span class="line">    LambdaQueryWrapper&lt;tb_user&gt; lqw = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>();</span><br><span class="line">    lqw.select(tb_user::getName, tb_user::getAge, tb_user::getPassword);</span><br><span class="line">    </span><br><span class="line">    List&lt;tb_user&gt; userList = userMapper.selectList(lqw);</span><br><span class="line">    System.out.println(userList);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方式2</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testLQWSelect</span><span class="params">()</span> &#123;</span><br><span class="line">    QueryWrapper&lt;tb_user&gt; lqw = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>();</span><br><span class="line">    lqw.select(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">    List&lt;tb_user&gt; userList = userMapper.selectList(lqw);</span><br><span class="line">    System.out.println(userList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="4-4、查询条件"><a href="#4-4、查询条件" class="headerlink" title="4.4、查询条件"></a>4.4、查询条件</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-21 164502.png" alt="image" style="zoom: 67%;" /><p>（1）判断登录</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testLQWSelect</span><span class="params">()</span> &#123;</span><br><span class="line">    LambdaQueryWrapper&lt;tb_user&gt; lqw = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>();</span><br><span class="line">    lqw.eq(tb_user::getName, <span class="string">&quot;zui&quot;</span>).eq(tb_user::getPassword, <span class="string">&quot;zui123&quot;</span>);</span><br><span class="line">    <span class="type">tb_user</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.selectOne(lqw);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（2）范围查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testLQWSelect</span><span class="params">()</span> &#123;</span><br><span class="line">    LambdaQueryWrapper&lt;tb_user&gt; lqw = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>();</span><br><span class="line">    lqw.between(tb_user::getAge, <span class="number">10</span>, <span class="number">20</span>);</span><br><span class="line">    List&lt;tb_user&gt; userList = userMapper.selectList(lqw);</span><br><span class="line">    System.out.println(userList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（3）模糊匹配</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testLQWSelect</span><span class="params">()</span> &#123;</span><br><span class="line">    LambdaQueryWrapper&lt;tb_user&gt; lqw = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>();</span><br><span class="line">    lqw.like(tb_user::getName, <span class="string">&quot;z&quot;</span>);</span><br><span class="line">    List&lt;tb_user&gt; userList = userMapper.selectList(lqw);</span><br><span class="line">    System.out.println(userList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（4）统计</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 统计全部</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testQWSelect</span><span class="params">()</span> &#123;</span><br><span class="line">    QueryWrapper&lt;tb_user&gt; qw = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>();</span><br><span class="line">    qw.select(<span class="string">&quot;count(*) as count&quot;</span>);</span><br><span class="line">    List&lt;Map&lt;String, Object&gt;&gt; userList = userMapper.selectMaps(qw);</span><br><span class="line">    System.out.println(userList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 统计年龄</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testQWSelect</span><span class="params">()</span> &#123;</span><br><span class="line">    QueryWrapper&lt;tb_user&gt; qw = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>();</span><br><span class="line">    qw.select(<span class="string">&quot;count(*) as count, age&quot;</span>);</span><br><span class="line">    qw.groupBy(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">    List&lt;Map&lt;String, Object&gt;&gt; userList = userMapper.selectMaps(qw);</span><br><span class="line"></span><br><span class="line">    System.out.println(userList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5、代码生成器"><a href="#5、代码生成器" class="headerlink" title="5、代码生成器"></a>5、代码生成器</h3><p>依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Generator</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">AutoGenerator</span> <span class="variable">autoGenerator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AutoGenerator</span>();</span><br><span class="line">        <span class="comment">// 数据库配置</span></span><br><span class="line">        <span class="type">DataSourceConfig</span> <span class="variable">dataSourceConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceConfig</span>();</span><br><span class="line">        dataSourceConfig.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        dataSourceConfig.setUrl(<span class="string">&quot;jdbc:mysql://127.0.0.1/test?serverTimezone=UTC&quot;</span>);</span><br><span class="line">        dataSourceConfig.setUsername(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">        dataSourceConfig.setPassword(<span class="string">&quot;12345&quot;</span>);</span><br><span class="line">        autoGenerator.setDataSource(dataSourceConfig);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 全局配置</span></span><br><span class="line">        <span class="type">GlobalConfig</span> <span class="variable">globalConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GlobalConfig</span>();</span><br><span class="line">        globalConfig.setOutputDir(System.getProperty(<span class="string">&quot;user.dir&quot;</span>) + <span class="string">&quot;/当前项目名/src/main/java&quot;</span>);<span class="comment">// 代码位置</span></span><br><span class="line">        globalConfig.setOpen(<span class="literal">false</span>);    <span class="comment">// 是否打开</span></span><br><span class="line">        globalConfig.setAuthor(<span class="string">&quot;zui&quot;</span>);  <span class="comment">// 作者</span></span><br><span class="line">        globalConfig.setFileOverride(<span class="literal">false</span>);  <span class="comment">// 是否覆盖原生生成文件</span></span><br><span class="line">        globalConfig.setMapperName(<span class="string">&quot;%sMapper&quot;</span>);  <span class="comment">// 数据层接口名</span></span><br><span class="line">        globalConfig.setIdType(IdType.ASSIGN_ID);   <span class="comment">// id生成策略</span></span><br><span class="line">        autoGenerator.setGlobalConfig(globalConfig);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 包名相关配置</span></span><br><span class="line">        <span class="type">PackageConfig</span> <span class="variable">packageConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageConfig</span>();</span><br><span class="line">        packageConfig.setParent(<span class="string">&quot;com.gec&quot;</span>);         <span class="comment">// 设置包名</span></span><br><span class="line">        packageConfig.setEntity(<span class="string">&quot;domain&quot;</span>);          <span class="comment">// 设置实体类包名</span></span><br><span class="line">        packageConfig.setMapper(<span class="string">&quot;Mapper&quot;</span>);          <span class="comment">// 设置数据层包名</span></span><br><span class="line">        autoGenerator.setPackageInfo(packageConfig);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 策略配置</span></span><br><span class="line">        <span class="type">StrategyConfig</span> <span class="variable">strategyConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StrategyConfig</span>();</span><br><span class="line">        strategyConfig.setInclude(<span class="string">&quot;tb_user&quot;</span>);       <span class="comment">// 设置参与生成的表名</span></span><br><span class="line">        strategyConfig.setTablePrefix(<span class="string">&quot;tb_&quot;</span>);       <span class="comment">// 设置参与生成的前缀表名，生成的实体类名为: tb_user - tb_ = user</span></span><br><span class="line">        strategyConfig.setRestControllerStyle(<span class="literal">true</span>);    <span class="comment">// REST风格</span></span><br><span class="line">        strategyConfig.setVersionFieldName(<span class="string">&quot;version&quot;</span>);  <span class="comment">//  设置乐观锁名称</span></span><br><span class="line">        strategyConfig.setLogicDeleteFieldName(<span class="string">&quot;deleted&quot;</span>);      <span class="comment">// 设置逻辑删除字段名</span></span><br><span class="line">        strategyConfig.setEntityLombokModel(<span class="literal">true</span>);          <span class="comment">// 启用lombok</span></span><br><span class="line">        autoGenerator.setStrategy(strategyConfig);</span><br><span class="line"></span><br><span class="line">        autoGenerator.execute();    <span class="comment">// 执行操作</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6、日志"><a href="#6、日志" class="headerlink" title="6、日志"></a>6、日志</h3><p>（1）yml配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/test</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">test</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">12345</span></span><br><span class="line">  <span class="attr">main:</span></span><br><span class="line">    <span class="attr">banner-mode:</span> <span class="string">off</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">root:</span> <span class="string">warn</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启MybatisPlus日志</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">banner:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>（2）log配置文件</p><p>在resources新建一个logback.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如下所示：</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-21 155501.png" alt="image" style="zoom:150%;" /><p>（仅用于自用，网上有许多大佬写的比我更好）</p>]]></content>
      
      
      <categories>
          
          <category> MybatisPlus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MybatisPlus </tag>
            
            <tag> 代码生成器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot</title>
      <link href="/2024/04/20/SpringBoot/"/>
      <url>/2024/04/20/SpringBoot/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Spring-Boot"><a href="#Spring-Boot" class="headerlink" title="Spring Boot"></a>Spring Boot</h1><h3 id="1、相关网站"><a href="#1、相关网站" class="headerlink" title="1、相关网站"></a>1、相关网站</h3><p><a href="https://spring.io/projects/spring-boot">Spring Boot</a></p><p><a href="https://start.spring.io/">Spring-initializr</a></p><p><a href="https://start.aliyun.com/">阿里云原生应用脚手架</a></p><p><a href="https://mvnrepository.com/">Maven Repository</a></p><span id="more"></span><p>更改新建模块 Spring initializr 服务器，解决无法使用Java8的问题:</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-20 160359.png" alt="image" style="zoom: 50%;" /><h3 id="2、多模块打包"><a href="#2、多模块打包" class="headerlink" title="2、多模块打包"></a>2、多模块打包</h3><p>注意：多模块项目仅仅需要在启动类所在的模块添加打包插件即可！！不要在父类添加打包插件，因为那样会导致全部子模块都使用spring-boot-maven-plugin的方式来打包。</p><p>1、打开设置-编辑器-文件编码，将3个编码全改为utf-8</p><p>2、执行package前先执行clean</p><p>3、添加build</p><p>参考 <a href="https://blog.csdn.net/qq_42875345/article/details/110790933">大佬的文章</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 启动类所在的模块 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 指定该Main Class为全局的唯一入口 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.yq.news.ZuulApp<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">layout</span>&gt;</span>ZIP<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span><span class="comment">&lt;!--可以把依赖的包都打包到生成的Jar包中--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4、在target中找到打包好的项目，该路径下cmd打开命令提示窗，运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar 项目名.jar</span><br></pre></td></tr></table></figure><p>多环境开发，选择不同环境运行（带参数启动）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar 项目名.jar --spring.profiles.active=环境名</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar 项目名.jar --server.port=端口号</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar 项目名.jar --server.port=端口号 --spring.profiles.active=环境名</span><br></pre></td></tr></table></figure><h3 id="3、配置文件"><a href="#3、配置文件" class="headerlink" title="3、配置文件"></a>3、配置文件</h3><h5 id="3-1-三种配置文件的优先级"><a href="#3-1-三种配置文件的优先级" class="headerlink" title="3.1 三种配置文件的优先级"></a>3.1 三种配置文件的优先级</h5><p>properties &gt; yml &gt; yaml</p><h5 id="3-2-日志级别-yml"><a href="#3-2-日志级别-yml" class="headerlink" title="3.2 日志级别 (.yml)"></a>3.2 日志级别 (.yml)</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">root:</span> <span class="string">warn/debug/error/fatal/info/off/trace</span></span><br></pre></td></tr></table></figure><h5 id="3-3-数据读取-yml"><a href="#3-3-数据读取-yml" class="headerlink" title="3.3 数据读取 (.yml)"></a>3.3 数据读取 (.yml)</h5><p>1、配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="attr">enterprise:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">jack</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">15</span></span><br><span class="line">  <span class="attr">tel:</span> <span class="number">123456</span></span><br><span class="line">  <span class="attr">subject:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">java</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">vue</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">大数据</span></span><br></pre></td></tr></table></figure><p>2、实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;enterprise&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Enterprise</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String tel;</span><br><span class="line">    <span class="keyword">private</span> String[] subject;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Get、Set方法</span></span><br><span class="line">    <span class="comment">// toString方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、controller表现层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/books&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookController</span> &#123;</span><br><span class="line">    <span class="comment">// 方式1</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Environment environment;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 方式2</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Enterprise enterprise;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getById</span><span class="params">(<span class="meta">@PathVariable</span> <span class="type">int</span> id)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;------- 方式1 -------&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> environment.getProperty(<span class="string">&quot;enterprise.age&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> environment.getProperty(<span class="string">&quot;enterprise.subject[1]&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;s1 = &quot;</span> + s1 + <span class="string">&quot;, s2 = &quot;</span> + s2);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;------- 方式2 -------&quot;</span>);</span><br><span class="line">        System.out.println(enterprise);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello, SpringBoot!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-4-多环境开发-yml"><a href="#3-4-多环境开发-yml" class="headerlink" title="3.4 多环境开发 (.yml)"></a>3.4 多环境开发 (.yml)</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置启用的环境</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="attr">activate:</span></span><br><span class="line">      <span class="attr">on-profile:</span> <span class="string">dev</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="attr">activate:</span></span><br><span class="line">      <span class="attr">on-profile:</span> <span class="string">pro</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8082</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="attr">activate:</span></span><br><span class="line">      <span class="attr">on-profile:</span> <span class="string">test</span></span><br></pre></td></tr></table></figure><h5 id="3-5-SpringBoot中4级配置文件"><a href="#3-5-SpringBoot中4级配置文件" class="headerlink" title="3.5 SpringBoot中4级配置文件"></a>3.5 SpringBoot中4级配置文件</h5><p>1级：file : config&#x2F;application.yml</p><p>2级：file : application.yml</p><p>3级：classpath : config&#x2F;application.yml</p><p>4级：classpath : application.yml</p><p>1、2级留做系统打包后设置通用属性</p><p>3、4级用于系统开发阶段设置通用属性</p><p>（仅用于自用，网上有许多大佬写的比我更好）</p>]]></content>
      
      
      <categories>
          
          <category> Spring Boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring Boot </tag>
            
            <tag> 多模块打包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven</title>
      <link href="/2024/04/18/maven/"/>
      <url>/2024/04/18/maven/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h1><h3 id="1、相关网站"><a href="#1、相关网站" class="headerlink" title="1、相关网站"></a>1、相关网站</h3><p><a href="https://mvnrepository.com/">Maven Repository</a></p><span id="more"></span><h3 id="2、分模块开发与依赖管理"><a href="#2、分模块开发与依赖管理" class="headerlink" title="2、分模块开发与依赖管理"></a>2、分模块开发与依赖管理</h3><h5 id="2-1-分模块开发"><a href="#2-1-分模块开发" class="headerlink" title="2.1 分模块开发"></a>2.1 分模块开发</h5><p>父模块：news-parents</p><p>子模块：news-eureka-server、news-query-ms、news-mapper、news-model</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 父工程聚合子工程（聚合） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>news-eureka-server<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>news-query-ms<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>news-mapper<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>news-model<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 子工程继承父工程（继承） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.yq<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>news-parents<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../pom.xml<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span> <span class="comment">&lt;!-- 指向父工程pom文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 一个工程引用另外一个工程 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 无法引用，尝试 maven 生命周期 install 到本地仓库 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span><span class="comment">&lt;!-- news-mapper --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.yq<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>news-model<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>dependencyManagement元素提供了一种管理依赖版本号的方式。</p><p>在dependencyManagement元素中声明所依赖的jar包的版本号等信息，那么所有子项目再次引入此依赖jar包时则无需显式的列出版本号。Maven会沿着父子层级向上寻找拥有dependencyManagement 元素的项目，然后使用它指定的版本号。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 父工程 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 子工程,无需指定版本信息 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-2-依赖管理"><a href="#2-2-依赖管理" class="headerlink" title="2.2 依赖管理"></a>2.2 依赖管理</h5><h6 id="（1）显示依赖树图"><a href="#（1）显示依赖树图" class="headerlink" title="（1）显示依赖树图"></a>（1）显示依赖树图</h6><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-17 223633.png" alt="image" style="zoom: 80%;" /><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-17 222633.png" alt="image" style="zoom: 50%;" /><h6 id="（2）可选依赖（不透明）"><a href="#（2）可选依赖（不透明）" class="headerlink" title="（2）可选依赖（不透明）"></a>（2）可选依赖（不透明）</h6><p>隐藏当前所依赖的资源，隐藏后对应资源不具有依赖传递依赖性</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span><span class="comment">&lt;!-- news-mapper --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.yq<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>news-model<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span><span class="comment">&lt;!-- 开启可选 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="（3）排除依赖（不需要）"><a href="#（3）排除依赖（不需要）" class="headerlink" title="（3）排除依赖（不需要）"></a>（3）排除依赖（不需要）</h6><p>主动断开依赖的资源</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span><span class="comment">&lt;!-- news-mapper --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.yq<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>news-model<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 排除依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-3-属性"><a href="#2-3-属性" class="headerlink" title="2.3 属性"></a>2.3 属性</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 定义属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>2.1.16.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span><span class="comment">&lt;!-- 引用属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>资源文件引用pom中的属性</p><p>（1）配置文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">$&#123;jdbc.driver&#125;</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">$&#123;jdbc.url&#125;</span></span><br><span class="line"><span class="attr">jdbc.username</span>=<span class="string">$&#123;jdbc.username&#125;</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">$&#123;jdbc.password&#125;</span></span><br></pre></td></tr></table></figure><p>（2）pom文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jdbc.driver</span>&gt;</span>com.mysql.jdbc.cj.Driver<span class="tag">&lt;/<span class="name">jdbc.driver</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jdbc.url</span>&gt;</span>jdbc:mysql://localhost:3306/test<span class="tag">&lt;/<span class="name">jdbc.url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jdbc.username</span>&gt;</span>root<span class="tag">&lt;/<span class="name">jdbc.username</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jdbc.password</span>&gt;</span>12345<span class="tag">&lt;/<span class="name">jdbc.password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- resources目录路径 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- $&#123;project.basedir&#125;为内置属性 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;project.basedir&#125;/src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span><span class="comment">&lt;!-- 开启过滤规则 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3、多环境配置与应用"><a href="#3、多环境配置与应用" class="headerlink" title="3、多环境配置与应用"></a>3、多环境配置与应用</h3><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-18 150529.png" alt="image" style="zoom: 67%;" /><p>（1）pom文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置多环境 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>env_dep<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbc.url</span>&gt;</span>jdbc:mysql://127.0.0.1:3306/test<span class="tag">&lt;/<span class="name">jdbc.url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设定为默认启动环境 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 生产环境 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>env_pro<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbc.url</span>&gt;</span>jdbc:mysql://127.1.1.1:3306/test<span class="tag">&lt;/<span class="name">jdbc.url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 测试环境 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>env_test<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbc.url</span>&gt;</span>jdbc:mysql://127.2.2.1:3306/test<span class="tag">&lt;/<span class="name">jdbc.url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br></pre></td></tr></table></figure><p>（2）构建过程</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-18 151736.png" alt="image" style="zoom: 80%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install -P 环境定义的id</span><br></pre></td></tr></table></figure><h3 id="4、私服"><a href="#4、私服" class="headerlink" title="4、私服"></a>4、私服</h3><h5 id="4-1-Nexus私服安装"><a href="#4-1-Nexus私服安装" class="headerlink" title="4.1 Nexus私服安装"></a>4.1 Nexus私服安装</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-18 154427.png" alt="image" style="zoom: 67%;" /><p>Nexus</p><ul><li>Sonatype公司的一款maven私服产品</li><li>下载地址：<a href="https://help.sonatype.com/en/download.html">https://help.sonatype.com/en/download.html</a></li></ul><p>安装完成后，到 ….\nexus-3.67.1-01\bin目录下，cmd打开命令提示窗，输入命令启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nexus.exe /run nexus</span><br></pre></td></tr></table></figure><p>使用 <a href="http://127.0.0.1:8081/">http://127.0.0.1:8081</a> 浏览器打开</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-18 160058.png" alt="image" style="zoom: 67%;" /><p>第一次打开点击sign in，根据指引设置密码</p><h5 id="4-2-资源的上传与下载"><a href="#4-2-资源的上传与下载" class="headerlink" title="4.2 资源的上传与下载"></a>4.2 资源的上传与下载</h5><p>（1）新建仓库</p><p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-18 162749.png" alt="image" style="zoom: 67%;" />（2）配置仓库</p><p>打开maven&#x2F;conf&#x2F;setting.xml，配置访问私服的权限</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-18 163212.png" alt="image" style="zoom: 67%;" /><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置访问私服的权限 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>SSM-Snapshot<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="comment">&lt;!-- 账号 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">password</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="comment">&lt;!-- 密码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>SSM-Release<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">password</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用maven-public仓库组，设置maven-public管理新建的两个仓库，打开setting.xml配置私服的访问路径</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-18 163717.png" alt="image" style="zoom: 67%;" /><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置私服的访问路径 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>maven-public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>*<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://127.0.0.1:8081/repository/maven-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span>     </span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><p>（3）上传仓库</p><p>打开要上传仓库的项目的pom.xml文件，添加以下代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--  配置当前工程保存在私服中的具体位置  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>SSM-Release<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://127.0.0.1:8081/repository/SSM-Release/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>SSM-Snapshot<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://127.0.0.1:8081/repository/SSM-Snapshot/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p>选择父工程maven，运行deploy</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-18 170109.png" alt="image" style="zoom: 67%;" /><p>运行成功</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-18 170235.png" alt="image" style="zoom: 67%;" /><p>私服访问中央服务器设置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">maven-central地址：</span><br><span class="line">https://repo1.maven.org/maven2/</span><br><span class="line"></span><br><span class="line">改为阿里云地址：</span><br><span class="line">https://maven.aliyun.com/repository/public</span><br></pre></td></tr></table></figure><p>（仅用于自用，网上有许多大佬写的比我更好）</p>]]></content>
      
      
      <categories>
          
          <category> maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
            <tag> 多环境配置 </tag>
            
            <tag> Nexus私服 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSM</title>
      <link href="/2024/04/17/SSM/"/>
      <url>/2024/04/17/SSM/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SSM"><a href="#SSM" class="headerlink" title="SSM"></a>SSM</h1><h3 id="1、相关网站"><a href="#1、相关网站" class="headerlink" title="1、相关网站"></a>1、相关网站</h3><p><a href="https://spring.io/">Spring官网</a></p><p><a href="https://mvnrepository.com/">Maven Repository</a></p><span id="more"></span><h3 id="2、项目结构及配置"><a href="#2、项目结构及配置" class="headerlink" title="2、项目结构及配置"></a>2、项目结构及配置</h3><h5 id="2-1-项目结构"><a href="#2-1-项目结构" class="headerlink" title="2.1 项目结构"></a>2.1 项目结构</h5><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-16 160341.png" alt="image" style="zoom: 67%;" /><h5 id="2-2-pom-xml"><a href="#2-2-pom-xml" class="headerlink" title="2.2 pom.xml"></a>2.2 pom.xml</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.13.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.13.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- tomcat 插件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common-tomcat-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- jackson --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--数据库相关包--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.13.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-3-application-properties"><a href="#2-3-application-properties" class="headerlink" title="2.3 application.properties"></a>2.3 application.properties</h5><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">jdbc:mysql://127.0.0.1:3306/test?useSSL=false</span></span><br><span class="line"><span class="attr">jdbc.username</span>=<span class="string">test</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">12345</span></span><br></pre></td></tr></table></figure><h3 id="3、Config"><a href="#3、Config" class="headerlink" title="3、Config"></a>3、Config</h3><h5 id="3-1-SpringConfig"><a href="#3-1-SpringConfig" class="headerlink" title="3.1 SpringConfig"></a>3.1 SpringConfig</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(&#123;&quot;com.gec.service&quot;&#125;)</span></span><br><span class="line"><span class="meta">@PropertySource(&quot;classpath:/application.properties&quot;)</span></span><br><span class="line"><span class="meta">@Import(&#123;JDBCConfig.class, MybatisConfig.class&#125;)</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span><span class="comment">// 事务总开关</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringConfig</span> &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-2-JDBCConfig"><a href="#3-2-JDBCConfig" class="headerlink" title="3.2 JDBCConfig"></a>3.2 JDBCConfig</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JDBCConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jdbc.driver&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String driver;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jdbc.url&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jdbc.username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jdbc.password&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">dataSource</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">DruidDataSource</span> <span class="variable">druidDataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DruidDataSource</span>();</span><br><span class="line">        druidDataSource.setDriverClassName(driver);</span><br><span class="line">        druidDataSource.setUrl(url);</span><br><span class="line">        druidDataSource.setUsername(username);</span><br><span class="line">        druidDataSource.setPassword(password);</span><br><span class="line">        <span class="keyword">return</span> druidDataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 事务管理器</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> PlatformTransactionManager <span class="title function_">platformTransactionManager</span><span class="params">(DataSource dataSource)</span> &#123;</span><br><span class="line">        <span class="type">DataSourceTransactionManager</span> <span class="variable">ds</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceTransactionManager</span>();</span><br><span class="line">        ds.setDataSource(dataSource);</span><br><span class="line">        <span class="keyword">return</span> ds;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-3-MybatisConfig"><a href="#3-3-MybatisConfig" class="headerlink" title="3.3 MybatisConfig"></a>3.3 MybatisConfig</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SqlSessionFactoryBean <span class="title function_">sqlSessionFactoryBean</span><span class="params">(DataSource dataSource)</span> &#123;</span><br><span class="line">        <span class="type">SqlSessionFactoryBean</span> <span class="variable">sessionFactoryBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBean</span>();</span><br><span class="line">        sessionFactoryBean.setDataSource(dataSource);</span><br><span class="line">        sessionFactoryBean.setTypeAliasesPackage(<span class="string">&quot;com.gec.domain&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> sessionFactoryBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MapperScannerConfigurer <span class="title function_">mapperScannerConfigurer</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">MapperScannerConfigurer</span> <span class="variable">scannerConfigurer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MapperScannerConfigurer</span>();</span><br><span class="line">        scannerConfigurer.setBasePackage(<span class="string">&quot;com.gec.dao&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> scannerConfigurer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-4-SpringMVCConfig"><a href="#3-4-SpringMVCConfig" class="headerlink" title="3.4 SpringMVCConfig"></a>3.4 SpringMVCConfig</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(&#123;&quot;com.gec.controller&quot;, &quot;com.gec.config&quot;&#125;)</span></span><br><span class="line"><span class="meta">@EnableWebMvc</span><span class="comment">// 本项目中，处理乱码需要引用该注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringMVCConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-5-SpringMVCSupportConfig"><a href="#3-5-SpringMVCSupportConfig" class="headerlink" title="3.5 SpringMVCSupportConfig"></a>3.5 SpringMVCSupportConfig</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.gec.controller&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringMVCSupportConfig</span> <span class="keyword">extends</span> <span class="title class_">WebMvcConfigurationSupport</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> &#123;</span><br><span class="line">        <span class="comment">// 当访问 /pages/??? 时候，不走mvc,直接访问</span></span><br><span class="line">        registry.addResourceHandler(<span class="string">&quot;/pages/**&quot;</span>).addResourceLocations(<span class="string">&quot;/pages/&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 位于 com.gec.controller.interceptor.ProjectInterceptor</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProjectInterceptor projectInterceptor;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;</span><br><span class="line">        <span class="comment">// 拦截器，拦截 /books 及 /books/*</span></span><br><span class="line">        registry.addInterceptor(projectInterceptor).addPathPatterns(<span class="string">&quot;/books&quot;</span>, <span class="string">&quot;/books/*&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-6-ServletContainersInitConfig"><a href="#3-6-ServletContainersInitConfig" class="headerlink" title="3.6 ServletContainersInitConfig"></a>3.6 ServletContainersInitConfig</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个servlet容器启动的配置类，在里面加载spring的配置</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletContainersInitConfig</span> <span class="keyword">extends</span> <span class="title class_">AbstractAnnotationConfigDispatcherServletInitializer</span> &#123;</span><br><span class="line">    <span class="comment">// 加载Spring容器配置</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt;[] getRootConfigClasses() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;SpringConfig.class&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载SpringMVC容器配置</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt;[] getServletConfigClasses() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;SpringMVCConfig.class&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置哪些参数归属于SpringMVC处理</span></span><br><span class="line">    <span class="keyword">protected</span> String[] getServletMappings() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;/&quot;</span>&#125;;<span class="comment">// 全部</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 处理乱码</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Filter[] getServletFilters() &#123;</span><br><span class="line">        <span class="type">CharacterEncodingFilter</span> <span class="variable">filter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CharacterEncodingFilter</span>();</span><br><span class="line">        filter.setEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Filter</span>[]&#123;filter&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、domain"><a href="#4、domain" class="headerlink" title="4、domain"></a>4、domain</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Book</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String type;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Book&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, type=&#x27;&quot;</span> + type + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, description=&#x27;&quot;</span> + description + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getType</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setType</span><span class="params">(String type)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.type = type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDescription</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> description;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDescription</span><span class="params">(String description)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.description = description;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5、dao"><a href="#5、dao" class="headerlink" title="5、dao"></a>5、dao</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookDao</span> &#123;</span><br><span class="line">    <span class="meta">@Insert(&quot;insert into tb_book values(null, #&#123;type&#125;, #&#123;name&#125;, #&#123;description&#125;)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">(Book book)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Delete(&quot;delete from tb_book where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Update(&quot;update tb_book set type=#&#123;type&#125;, name=#&#123;name&#125;, description=#&#123;description&#125; where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(Book book)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select * from tb_book where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Book <span class="title function_">getById</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select * from tb_book&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Book&gt; <span class="title function_">selectAll</span><span class="params">()</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 用于演示AOP</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findName</span><span class="params">(<span class="type">int</span> id, String name)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;findName.......&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6、service"><a href="#6、service" class="headerlink" title="6、service"></a>6、service</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Transactional</span><span class="comment">// 事务处理</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">save</span><span class="params">(Book book)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">delete</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">update</span><span class="params">(Book book)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Book <span class="title function_">getById</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Book&gt; <span class="title function_">selectAll</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-1-impl"><a href="#6-1-impl" class="headerlink" title="6.1 impl"></a>6.1 impl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BookDao bookDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">save</span><span class="params">(Book book)</span> &#123;</span><br><span class="line">        bookDao.save(book);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">delete</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        bookDao.delete(id);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">update</span><span class="params">(Book book)</span> &#123;</span><br><span class="line">        bookDao.update(book);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Book <span class="title function_">getById</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="type">Book</span> <span class="variable">byId</span> <span class="operator">=</span> bookDao.getById(id);</span><br><span class="line">        <span class="keyword">return</span> byId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Book&gt; <span class="title function_">selectAll</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Book&gt; bookList = bookDao.selectAll();</span><br><span class="line">        <span class="keyword">return</span> bookList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7、异常处理"><a href="#7、异常处理" class="headerlink" title="7、异常处理"></a>7、异常处理</h3><h5 id="1、exception"><a href="#1、exception" class="headerlink" title="1、exception"></a>1、exception</h5><p>BusinessException(业务异常)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BusinessException</span> <span class="keyword">extends</span> <span class="title class_">RuntimeException</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BusinessException</span><span class="params">(Integer code, String s)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(s);</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BusinessException</span><span class="params">(Integer code, String s, Throwable throwable)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(s, throwable);</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCode</span><span class="params">(Integer code)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SystemException(系统异常)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SystemException</span> <span class="keyword">extends</span> <span class="title class_">RuntimeException</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">SystemException</span><span class="params">(Integer code, String s)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(s);</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">SystemException</span><span class="params">(Integer code, String s, Throwable throwable)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(s, throwable);</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCode</span><span class="params">(Integer code)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2、controller"><a href="#2、controller" class="headerlink" title="2、controller"></a>2、controller</h5><p>ProjectExceptionAdvice</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 由@ControllerAdvice、@ResponseBody组成，专为RESTful控制器设计的全局异常处理器</span></span><br><span class="line"><span class="meta">@RestControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProjectExceptionAdvice</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 业务异常、系统异常、其他异常</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(SystemException.class)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">doSystemException</span><span class="params">(SystemException e)</span> &#123;</span><br><span class="line">        <span class="comment">// 记录日志</span></span><br><span class="line">        <span class="comment">// 发送消息给运维</span></span><br><span class="line">        <span class="comment">// 发送邮件给开发人员,e对象发送给开发人员</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(<span class="literal">null</span>, e.getCode(), e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(BusinessException.class)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">doBusinessException</span><span class="params">(BusinessException e)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(<span class="literal">null</span>, e.getCode(), e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">doException</span><span class="params">(Exception e)</span> &#123;</span><br><span class="line">        <span class="comment">// 记录日志</span></span><br><span class="line">        <span class="comment">// 发送消息给运维</span></span><br><span class="line">        <span class="comment">// 发送邮件给开发人员,e对象发送给开发人员</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(<span class="literal">null</span>, Code.OTHER_ERR, <span class="string">&quot;处理其他异常&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3、模拟异常"><a href="#3、模拟异常" class="headerlink" title="3、模拟异常"></a>3、模拟异常</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 业务异常</span></span><br><span class="line"><span class="keyword">if</span> (id == <span class="number">1</span>)&#123;    </span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(Code.BUSINESS_ERR, <span class="string">&quot;业务异常&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 系统异常</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>/<span class="number">0</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">SystemException</span>(Code.SYSTEM_TIMEOUT_ERR, <span class="string">&quot;系统异常&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 其他异常（将原有数字改为字符串a）</span></span><br><span class="line">http:<span class="comment">//127.0.0.1/a</span></span><br></pre></td></tr></table></figure><h3 id="8、拦截器"><a href="#8、拦截器" class="headerlink" title="8、拦截器"></a>8、拦截器</h3><h5 id="8-1-controller-interceptor-ProjectInterceptor"><a href="#8-1-controller-interceptor-ProjectInterceptor" class="headerlink" title="8.1 controller.interceptor.ProjectInterceptor"></a>8.1 controller.interceptor.ProjectInterceptor</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProjectInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 拦截器参数</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">contentType</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;Content-Type&quot;</span>);</span><br><span class="line">        <span class="type">HandlerMethod</span> <span class="variable">hm</span> <span class="operator">=</span> (HandlerMethod) handler;</span><br><span class="line">        System.out.println(<span class="string">&quot;preHandle......, &quot;</span> + contentType + <span class="string">&quot;, &quot;</span> + hm.getMethod());</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">// 返回false，表示后面拦截器均终止运行</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;postHandle......&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;afterCompletion......&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拦截器链配置</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-16 164337.png" alt="image" style="zoom: 80%;" /><h3 id="9、controller"><a href="#9、controller" class="headerlink" title="9、controller"></a>9、controller</h3><h5 id="9-1-表现层数据封装"><a href="#9-1-表现层数据封装" class="headerlink" title="9.1 表现层数据封装"></a>9.1 表现层数据封装</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Code</span> &#123;</span><br><span class="line">    <span class="comment">// 成功</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">SAVE_OK</span> <span class="operator">=</span> <span class="number">1001</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">DELETE_OK</span> <span class="operator">=</span> <span class="number">1002</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">UPDATE_OK</span> <span class="operator">=</span> <span class="number">1003</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">GET_OK</span> <span class="operator">=</span> <span class="number">1003</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 失败</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">SAVE_ERR</span> <span class="operator">=</span> <span class="number">2001</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">DELETE_ERR</span> <span class="operator">=</span> <span class="number">2002</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">UPDATE_ERR</span> <span class="operator">=</span> <span class="number">2003</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">GET_ERR</span> <span class="operator">=</span> <span class="number">2003</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 异常</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">SYSTEM_ERR</span> <span class="operator">=</span> <span class="number">501</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">BUSINESS_ERR</span> <span class="operator">=</span> <span class="number">502</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">SYSTEM_TIMEOUT_ERR</span> <span class="operator">=</span> <span class="number">5020</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">OTHER_ERR</span> <span class="operator">=</span> <span class="number">503</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Result</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Object data;</span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Result</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Result</span><span class="params">(Object data, Integer code)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Result</span><span class="params">(Object data, Integer code, String msg)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setData</span><span class="params">(Object data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCode</span><span class="params">(Integer code)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMsg</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="9-2-表现层"><a href="#9-2-表现层" class="headerlink" title="9.2 表现层"></a>9.2 表现层</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span>    <span class="comment">// REST风格</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/books&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BookService bookService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 增</span></span><br><span class="line">    <span class="meta">@PostMapping</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">save</span><span class="params">(<span class="meta">@RequestBody</span> Book book)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> bookService.save(book);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(flag, flag ? Code.SAVE_OK : Code.SAVE_ERR);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删</span></span><br><span class="line">    <span class="meta">@DeleteMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">delete</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> bookService.delete(id);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(flag, flag ? Code.DELETE_OK : Code.DELETE_ERR);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 改</span></span><br><span class="line">    <span class="meta">@PutMapping</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">update</span><span class="params">(<span class="meta">@RequestBody</span> Book book)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> bookService.update(book);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(flag, flag ? Code.UPDATE_OK : Code.UPDATE_ERR);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查（单个）</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">getById</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span> &#123;</span><br><span class="line">        <span class="type">Book</span> <span class="variable">byId</span> <span class="operator">=</span> bookService.getById(id);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">code</span> <span class="operator">=</span> byId!=<span class="literal">null</span> ? Code.GET_OK : Code.GET_ERR;</span><br><span class="line">        <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> byId!=<span class="literal">null</span> ? <span class="string">&quot;查询成功&quot;</span> : <span class="string">&quot;数据查询失败，请重试！&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(byId, code, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查（全部）</span></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">selectAll</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Book&gt; bookList = bookService.selectAll();</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">code</span> <span class="operator">=</span> bookList!=<span class="literal">null</span> ? Code.GET_OK : Code.GET_ERR;</span><br><span class="line">        <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> bookList!=<span class="literal">null</span> ? <span class="string">&quot;查询成功&quot;</span> : <span class="string">&quot;数据查询失败，请重试！&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(bookList, code, msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10、AOP面向切面编程"><a href="#10、AOP面向切面编程" class="headerlink" title="10、AOP面向切面编程"></a>10、AOP面向切面编程</h3><p><em>在不惊动原始数据的情况下，为其进行功能增强</em></p><h5 id="10-1-依赖"><a href="#10-1-依赖" class="headerlink" title="10.1 依赖"></a>10.1 依赖</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectj-jweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="10-2-SpringConfig"><a href="#10-2-SpringConfig" class="headerlink" title="10.2 SpringConfig"></a>10.2 SpringConfig</h5><p>配置@EnableAspectJAutoProxy(proxyTargetClass &#x3D; true)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configurable</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.gec&quot;)</span></span><br><span class="line"><span class="meta">@EnableAspectJAutoProxy(proxyTargetClass = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="10-3-SpringAOPConfig"><a href="#10-3-SpringAOPConfig" class="headerlink" title="10.3 SpringAOPConfig"></a>10.3 SpringAOPConfig</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span>    <span class="comment">// aop类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringAOP</span> &#123;</span><br><span class="line">    <span class="comment">// 定义切入点</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(String com.gec.dao.BookDao.findName(..))&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">pt</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 绑定切入点与通知关系</span></span><br><span class="line">    <span class="meta">@Before(&quot;pt()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">(JoinPoint jp)</span> &#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;before……&quot;</span>);</span><br><span class="line">        Object[] args = jp.getArgs();</span><br><span class="line">        System.out.print(Arrays.toString(args) + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        args[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After(&quot;pt()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">after</span><span class="params">(JoinPoint jp)</span> &#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;after……&quot;</span>);</span><br><span class="line">        Object[] args = jp.getArgs();</span><br><span class="line">        System.out.print(Arrays.toString(args) + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(value = &quot;pt()&quot;, returning = &quot;ret&quot;)</span>         <span class="comment">// 返回后通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterReturning</span><span class="params">(JoinPoint jp, String ret)</span> &#123; <span class="comment">// 多参数，JoinPoint必须在前</span></span><br><span class="line">        System.out.println(<span class="string">&quot;afterReturning………………&quot;</span> + ret);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterThrowing(value = &quot;pt()&quot;, throwing = &quot;t&quot;)</span>            <span class="comment">// 抛出异常后通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterThrowing</span><span class="params">(Throwable t)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;afterThrowing………………&quot;</span> + t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(&quot;pt()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">around</span><span class="params">(ProceedingJoinPoint pjp)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        Object[] args = pjp.getArgs();</span><br><span class="line">        System.out.println(Arrays.toString(args));</span><br><span class="line">        args[<span class="number">0</span>] = <span class="number">1</span>;<span class="comment">// 切入点前更改数据，达到更改原始数据的作用</span></span><br><span class="line"></span><br><span class="line">        <span class="type">Object</span> <span class="variable">ret</span> <span class="operator">=</span> pjp.proceed(args);<span class="comment">// 设置切入点</span></span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>（仅用于自用，网上有许多大佬写的比我更好）</p>]]></content>
      
      
      <categories>
          
          <category> SSM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM </tag>
            
            <tag> 事务管理器 </tag>
            
            <tag> 中文乱码处理 </tag>
            
            <tag> REST风格 </tag>
            
            <tag> 异常处理 </tag>
            
            <tag> 数据封装 </tag>
            
            <tag> 拦截器 </tag>
            
            <tag> AOP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis基础-02</title>
      <link href="/2024/04/07/redis%E5%9F%BA%E7%A1%80-02/"/>
      <url>/2024/04/07/redis%E5%9F%BA%E7%A1%80-02/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="redis基础-02"><a href="#redis基础-02" class="headerlink" title="redis基础-02"></a>redis基础-02</h1><h3 id="1、免费Redis图形化界面"><a href="#1、免费Redis图形化界面" class="headerlink" title="1、免费Redis图形化界面"></a>1、免费Redis图形化界面</h3><h5 id="1-1-下载"><a href="#1-1-下载" class="headerlink" title="1.1 下载"></a>1.1 下载</h5><p><a href="https://github.com/lework/RedisDesktopManager-Windows/releases">RESP</a></p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-07 092320.png" alt="image" style="zoom:80%;" /><span id="more"></span><h5 id="1-2-连接"><a href="#1-2-连接" class="headerlink" title="1.2 连接"></a>1.2 连接</h5><p>1、打开CentOS, 运行.&#x2F;redis-server</p><p>2、关闭CentOS防火墙</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld  // 查看防火墙</span><br><span class="line"></span><br><span class="line">systemctl stop firewalld    // 关闭防火墙（暂时关闭，下次开启CentOS需要再次关闭）</span><br></pre></td></tr></table></figure><p>3、连接</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-07 094134.png" alt="image" style="zoom:67%;" /><p>查看CentOS 地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr</span><br></pre></td></tr></table></figure><p>提示：测试连接一般秒连，转圈则说明连接失败，查看一下防火墙是否关闭。</p><h3 id="2、代码测试"><a href="#2、代码测试" class="headerlink" title="2、代码测试"></a>2、代码测试</h3><h5 id="2-1、使用jedis测试"><a href="#2-1、使用jedis测试" class="headerlink" title="2.1、使用jedis测试"></a>2.1、使用jedis测试</h5><p>（1）下载jedis</p><p>项目目录如下：</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-07 095535.png" alt="image" style="zoom:80%;" /><p>新建lib文件夹，加入图中两个文件，右键添加为库</p><p><a href="https://github.com/lu5216/lu5216.github.io/tree/main/file">下载地址</a></p><p>（2）测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.gec.demoTest1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ZuiYing~</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@title</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DemoTest1</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fun1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Jedis</span>(<span class="string">&quot;192.168.93.129&quot;</span>, <span class="number">6379</span>);</span><br><span class="line">        jedis.set(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;jack&quot;</span>);</span><br><span class="line">        jedis.set(<span class="string">&quot;age&quot;</span>,<span class="string">&quot;13&quot;</span>);</span><br><span class="line">        jedis.set(<span class="string">&quot;address&quot;</span>,<span class="string">&quot;广州&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fun2</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Jedis</span>(<span class="string">&quot;192.168.93.129&quot;</span>, <span class="number">6379</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> jedis.get(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">age</span> <span class="operator">=</span> jedis.get(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">address</span> <span class="operator">=</span> jedis.get(<span class="string">&quot;address&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;name = &quot;</span> + name + <span class="string">&quot;, age = &quot;</span> + age + <span class="string">&quot;, address = &quot;</span> + address);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>fun1()运行，RESP刷新，db0成功添加数据</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-07 100545.png" alt="image" style="zoom:80%;" /><h5 id="2-2、-SpringTest测试"><a href="#2-2、-SpringTest测试" class="headerlink" title="2.2、 SpringTest测试"></a>2.2、 SpringTest测试</h5><p>项目目录如下所示</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-07 114710.png" alt="image" style="zoom:80%;" /><p>pom.xml代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--导入spring-data-redis依赖--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--单元测试--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-site-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.7.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-project-info-reports-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置文件如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8088</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">(IP地址)</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br></pre></td></tr></table></figure><p>启动类如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringDataRedisAPP</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(SpringDataRedisAPP.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 关联启动类和测试类</span></span><br><span class="line"><span class="meta">@SpringBootTest(classes = &#123;SpringDataRedisAPP.class&#125;)</span></span><br><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AppTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 存数据</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.redisTemplate.opsForValue().set(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;jack&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.redisTemplate.opsForValue().set(<span class="string">&quot;age&quot;</span>,<span class="string">&quot;13&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.redisTemplate.opsForValue().set(<span class="string">&quot;address&quot;</span>,<span class="string">&quot;广州&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;存储数据成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取数据</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> <span class="built_in">this</span>.redisTemplate.opsForValue().get(<span class="string">&quot;time&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;取出的数据: &quot;</span> + o);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 过期时间</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test3</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 设置过期时间为10s</span></span><br><span class="line">        <span class="built_in">this</span>.redisTemplate.opsForValue().set(<span class="string">&quot;time&quot;</span>,<span class="string">&quot;10&quot;</span>, <span class="number">10</span>, TimeUnit.SECONDS);</span><br><span class="line">        System.out.println(<span class="string">&quot;存储数据成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（仅用于自用，网上有许多大佬写的比我更好）</p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
            <tag> RESP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis基础-01</title>
      <link href="/2024/04/06/redis%E5%9F%BA%E7%A1%80-01/"/>
      <url>/2024/04/06/redis%E5%9F%BA%E7%A1%80-01/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="redis基础-01"><a href="#redis基础-01" class="headerlink" title="redis基础-01"></a>redis基础-01</h1><h3 id="1、redis官网"><a href="#1、redis官网" class="headerlink" title="1、redis官网"></a>1、redis官网</h3><p><a href="https://www.redis.io/">redis官网</a></p><p><a href="https://redis.io/community/">redis官方命令文档</a></p><span id="more"></span><h3 id="2、redis的安装"><a href="#2、redis的安装" class="headerlink" title="2、redis的安装"></a>2、redis的安装</h3><p>下载虚拟机</p><p>下载CntOS</p><p>到官网下载redis</p><h5 id="2-1-解压redis"><a href="#2-1-解压redis" class="headerlink" title="2.1 解压redis"></a>2.1 解压redis</h5><p>将redis压缩包移到待安装目录下</p><p>命令窗输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf redis压缩包名</span><br></pre></td></tr></table></figure><h5 id="2-2-安装C和C-编译环境"><a href="#2-2-安装C和C-编译环境" class="headerlink" title="2.2 安装C和C++ 编译环境"></a>2.2 安装C和C++ 编译环境</h5><p>进入解压好的redis</p><p>命令窗输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc-c++</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc-c++ -y</span><br></pre></td></tr></table></figure><h5 id="2-3-编译C代码-make"><a href="#2-3-编译C代码-make" class="headerlink" title="2.3 编译C代码 make"></a>2.3 编译C代码 make</h5><p>进入到redis源码目录下</p><p>命令窗输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install  //会装在默认路径下</span><br></pre></td></tr></table></figure><p>可以通过 prefix来指定安装路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install PREFIX=/usr/local/redis </span><br></pre></td></tr></table></figure><h5 id="2-4-启动redis-server-服务器"><a href="#2-4-启动redis-server-服务器" class="headerlink" title="2.4 启动redis-server 服务器"></a>2.4 启动redis-server 服务器</h5><p>cd 进入到你安装的redis 目录下， 我的是&#x2F;usr&#x2F;local&#x2F;redis</p><p>命令行输入ll，查看当前目录如下图所示，只有bin文件</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-06 214624.png" alt="image" style="zoom:150%;" /><p>命令窗输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd bin   // 进入bin文件</span><br><span class="line">ll</span><br></pre></td></tr></table></figure><p>目录如下所示（redis.conf除外，后面配置）</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-06 214906.png" alt="image" style="zoom:80%;" /><p>命令窗输入，启动redis-server：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-server</span><br></pre></td></tr></table></figure><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-06 215315.png" alt="image" style="zoom:80%;" /><h3 id="3、redis的启动模式"><a href="#3、redis的启动模式" class="headerlink" title="3、redis的启动模式"></a>3、redis的启动模式</h3><ul><li><p>默认启动模式，redis启动的时候，是前台启动模式，redis启动后，界面会直接阻挡默认的linux操作窗口 </p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-06 215315.png" alt="image" style="zoom:150%;" /></li><li><p>后台启动模式，redis启动后，不会阻挡住linux操作窗口 </p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-06 220450.png" alt="image" style="zoom:150%;" /></li></ul><h5 id="3-1-复制一份redis-conf"><a href="#3-1-复制一份redis-conf" class="headerlink" title="3.1 复制一份redis.conf"></a>3.1 复制一份redis.conf</h5><p>将redis解压后的安装包中 redis.conf 配置文件复制一份到  &#x2F;usr&#x2F;local&#x2F;redis&#x2F;bin（安装自己安装路径）</p><p>命令窗输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp redis.conf /usr/local/redis/bin</span><br></pre></td></tr></table></figure><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-06 214906.png" alt="image" style="zoom:150%;" /><h5 id="3-2-修改redis-conf-中配置"><a href="#3-2-修改redis-conf-中配置" class="headerlink" title="3.2 修改redis.conf 中配置"></a>3.2 修改redis.conf 中配置</h5><p>cd 到 &#x2F;usr&#x2F;local&#x2F;redis&#x2F;bin</p><p>命令窗输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim redis.conf</span><br></pre></td></tr></table></figure><p>将下方所示的daemonize no 改为 yes</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-06 220118.png" alt="image" style="zoom:150%;" /><p>保存退出</p><p>命令窗输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-server redis.conf</span><br></pre></td></tr></table></figure><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-06 220450.png" alt="image" style="zoom:150%;" /><h5 id="3-3-确认redis-sevrer启动成功"><a href="#3-3-确认redis-sevrer启动成功" class="headerlink" title="3.3 确认redis-sevrer启动成功"></a>3.3 确认redis-sevrer启动成功</h5><p>（1）通过启动redis-cli 客户端去连接服务器</p><p>bin目录下命令行输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli</span><br></pre></td></tr></table></figure><p>如下图所示，则启动成功</p><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-06 220757.png" alt="image" style="zoom:150%;" /><p>（2）进程查看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux|grep redis</span><br></pre></td></tr></table></figure><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-06 220935.png" alt="image" style="zoom:150%;" /><h5 id="3-4-关闭redis-sevrer"><a href="#3-4-关闭redis-sevrer" class="headerlink" title="3.4 关闭redis-sevrer"></a>3.4 关闭redis-sevrer</h5><p>（1）通过redis-cli客户端发送命令给 redis服务器 进行关闭</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutdown</span><br></pre></td></tr></table></figure><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-06 221220.png" alt="image" style="zoom:150%;" /><p>（2）杀死进程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -9 进程id</span><br></pre></td></tr></table></figure><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-06 221436.png" alt="image" style="zoom:150%;" /><h5 id="3-5-指定ip和端口号-去连接服务器"><a href="#3-5-指定ip和端口号-去连接服务器" class="headerlink" title="3.5 指定ip和端口号 去连接服务器"></a>3.5 指定ip和端口号 去连接服务器</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr   // 查询当前Linux系统IP地址</span><br></pre></td></tr></table></figure><p>获取ip地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli -h [ip地址] -p [端口号（默认为6379）]</span><br></pre></td></tr></table></figure><h3 id="4、redis基本操作"><a href="#4、redis基本操作" class="headerlink" title="4、redis基本操作"></a>4、redis基本操作</h3><ol><li><p>存储String 类型</p><p>（1）存储String 类型</p><p>（2）当redis存储的时候，如果存了多次相同key，不同值，后面的值会覆盖之前的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set key value</span><br></pre></td></tr></table></figure><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-06 222250.png" alt="image" style="zoom: 80%;" /></li><li><p>获取string的值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get key</span><br></pre></td></tr></table></figure><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-06 222605.png" alt="image" style="zoom: 80%;" /></li><li><p>查看当前库所有key名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keys *</span><br></pre></td></tr></table></figure><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-06 222724.png" alt="image" style="zoom: 80%;" /></li><li><p>切换数据库命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 数字   // 1-15,共16个库</span><br></pre></td></tr></table></figure><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-06 222807.png" alt="image" style="zoom:80%;" /></li><li><p>删除 redis中数据 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">del key</span><br></pre></td></tr></table></figure><img src="/images/%24%7Bimg%7D/屏幕截图 2024-04-06 223222.png" alt="image" style="zoom:80%;" /></li><li><p>清空当前库的所有数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flushdb</span><br></pre></td></tr></table></figure></li><li><p>清空所有库的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flushall </span><br></pre></td></tr></table></figure></li><li><p>key的过期时间 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expire key [时间(s)]</span><br></pre></td></tr></table></figure></li><li><p>知道key的剩余时间 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ttl key</span><br></pre></td></tr></table></figure></li></ol><p>（仅用于自用，网上有许多大佬写的比我更好）</p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
            <tag> redis命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git上传项目</title>
      <link href="/2024/03/04/git%E4%B8%8A%E4%BC%A0%E9%A1%B9%E7%9B%AE/"/>
      <url>/2024/03/04/git%E4%B8%8A%E4%BC%A0%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Git上传项目"><a href="#Git上传项目" class="headerlink" title="Git上传项目"></a>Git上传项目</h1><h3 id="1、为GitHub账户设置SSH-Key"><a href="#1、为GitHub账户设置SSH-Key" class="headerlink" title="1、为GitHub账户设置SSH Key"></a>1、为GitHub账户设置SSH Key</h3><h5 id="1-1-检测是否已生成密钥"><a href="#1-1-检测是否已生成密钥" class="headerlink" title="1.1 检测是否已生成密钥"></a>1.1 检测是否已生成密钥</h5><p>第一步，检测是否已经生成了密钥，ls出现id_rsa与id_rsa.pub则已生成密钥。</p><p><img src="/images/$%7Bimg%7D/20240304-1620.png" alt="image"></p><p>id_rsa与id_rsa.pub可以在目录C:\Users\用户名\.ssh里面找到。</p><span id="more"></span><h5 id="1-2-生成SSH-Key"><a href="#1-2-生成SSH-Key" class="headerlink" title="1.2 生成SSH Key"></a>1.2 生成SSH Key</h5><p>已经有了密钥可以跳过。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C “xxxxxx@qq.com”</span><br></pre></td></tr></table></figure><p>可以直接回车生成密钥。</p><p><img src="/images/$%7Bimg%7D/20240304-1633.png" alt="image"></p><p>生成成功后，在目录C:\Users\用户名\.ssh里，打开id_rsa.pub，复制ssh key公钥。</p><h5 id="1-3-为GitHub账号配置SSH-Key"><a href="#1-3-为GitHub账号配置SSH-Key" class="headerlink" title="1.3 为GitHub账号配置SSH Key"></a>1.3 为GitHub账号配置SSH Key</h5><p>点击头像，找到Setting，<strong>打开设置</strong>。</p><img src="/images/%24%7Bimg%7D/20240304-1641.png" alt="image" style="zoom: 50%;" /><p>找到 <strong>SSH and GPG Keys</strong>，点击 <strong>SSH Keys</strong> 右侧的 <strong>New SSH Key</strong> 新增密钥，填上标题。</p><p><img src="/images/$%7Bimg%7D/20240304-1643.png" alt="image"></p><p>填上标题和密钥，点击 <strong>Add SSH Key</strong>。</p><img src="/images/%24%7Bimg%7D/20240304-1649.png" alt="image" style="zoom:50%;" /><p>验证身份后，github账号的SSH Keys配置完成。</p><p><img src="/images/$%7Bimg%7D/20240304-1651.png" alt="image"></p><h3 id="2、上传本地项目到GitHub"><a href="#2、上传本地项目到GitHub" class="headerlink" title="2、上传本地项目到GitHub"></a>2、上传本地项目到GitHub</h3><h5 id="2-1-建立本地仓库"><a href="#2-1-建立本地仓库" class="headerlink" title="2.1 建立本地仓库"></a>2.1 建立本地仓库</h5><p>到自定文件夹下，鼠标右击进入 git bash，执行指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure><p><img src="/images/$%7Bimg%7D/20240304-1700.png" alt="image"></p><p>初始化成功后，项目里多出一个隐藏文件夹 .git</p><p><img src="/images/$%7Bimg%7D/20240304-1702.png" alt="image"></p><p>将需要提交上传的项目放到该目录下</p><p>将所有文件添加到仓库，执行指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br></pre></td></tr></table></figure><p>将文件提交到仓库，双引号内是提交注释，执行指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m &quot;提交文件&quot;</span><br></pre></td></tr></table></figure><p><img src="/images/$%7Bimg%7D/20240304-1710.png" alt="image"></p><p>到此，本地仓库创建完成。</p><h5 id="2-2-关联GitHub"><a href="#2-2-关联GitHub" class="headerlink" title="2.2 关联GitHub"></a>2.2 关联GitHub</h5><p>到GitHub创建的项目下复制SSH地址。</p><img src="/images/%24%7Bimg%7D/20240304-1713.png" alt="image" style="zoom:50%;" /><p>执行指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add origin git@github.com:lu5216/subject.git</span><br></pre></td></tr></table></figure><h5 id="2-3-上传本地文件"><a href="#2-3-上传本地文件" class="headerlink" title="2.3 上传本地文件"></a>2.3 上传本地文件</h5><p>执行指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin master</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin master -f</span><br></pre></td></tr></table></figure><h3 id="3、各种上传问题"><a href="#3、各种上传问题" class="headerlink" title="3、各种上传问题"></a>3、各种上传问题</h3><h5 id="3-1-当上传的文件过大时（超过100MB），报错如下："><a href="#3-1-当上传的文件过大时（超过100MB），报错如下：" class="headerlink" title="3.1 当上传的文件过大时（超过100MB），报错如下："></a>3.1 当上传的文件过大时（超过100MB），报错如下：</h5><img src="/images/%24%7Bimg%7D/20240304-1727.png"/><p>解决方法：</p><p>下载 <a href="https://git-lfs.com/">Git-LFS</a> ，并安装到git目录下D:\Git\Git\bin\Git LFS。</p><p>进给安装后的目录，打开git bash，执行指令（这个命令只需执行这一次即可）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git lfs install  #安装大文件上传应用 </span><br></pre></td></tr></table></figure><p>到仓库目录，打开 GitBash，追踪需要上传的大文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git lfs track *  #追踪要上传的大文件，*表示路径下的所有文件 </span><br></pre></td></tr></table></figure><p>添加要上传的文件属性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add .gitattributes   #添加先上传的属性文件</span><br></pre></td></tr></table></figure><p>上传属性文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;first commit&quot;   #添加属性文件上传的说明</span><br><span class="line">git remote add origin git@github.com:lu5216/subject.git   #建立本地和Github仓库的链接 </span><br><span class="line">git push -u origin main        #上传属性文件</span><br></pre></td></tr></table></figure><p>接下来按常规步骤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .                      #添加要上传的大文件</span><br><span class="line">git commit -m &quot;Git LFS commit&quot; #添加大文件上传的说明 </span><br><span class="line">git push origin master         #上传大文件</span><br></pre></td></tr></table></figure><h5 id="3-2、error-failed-to-push-some-refs-to"><a href="#3-2、error-failed-to-push-some-refs-to" class="headerlink" title="3.2、error: failed to push some refs to"></a>3.2、error: failed to push some refs to</h5><img src="/images/%24%7Bimg%7D/20240304 -1840.png"/><p>问题原因：远程库与本地库不一致造成的</p><p>解决办法：将远程库更新合并到本地库，执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull --rebase origin main</span><br></pre></td></tr></table></figure><p>最后执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin main</span><br></pre></td></tr></table></figure><p>（仅用于自用，网上有许多大佬写的比我更好）</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git上传项目 </tag>
            
            <tag> Git上传项目常见错误 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
